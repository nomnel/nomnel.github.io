<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[飲んだり寝たり]]></title>
  <link href="http://nomnel.net/atom.xml" rel="self"/>
  <link href="http://nomnel.net/"/>
  <updated>2014-01-17T09:34:42+09:00</updated>
  <id>http://nomnel.net/</id>
  <author>
    <name><![CDATA[nomnel]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Rubyのキーワード引数はハッシュで渡せる話]]></title>
    <link href="http://nomnel.net/blog/ruby-keyword-args/"/>
    <updated>2014-01-17T09:30:00+09:00</updated>
    <id>http://nomnel.net/blog/ruby-keyword-args</id>
    <content type="html"><![CDATA[<p>タイトルの通りなんだけどRailsで<code>params</code>を渡したらうまくいかなかったのでまとめてみた.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># キーワード引数取るメソッドを定義</span>
</span><span class='line'><span class="o">[</span><span class="mi">24</span><span class="o">]</span> <span class="n">pry</span><span class="p">(</span><span class="n">main</span><span class="p">)</span><span class="o">&gt;</span> <span class="k">def</span> <span class="nf">f</span><span class="p">(</span><span class="ss">a</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="ss">b</span><span class="p">:</span> <span class="mi">2</span><span class="p">)</span>
</span><span class='line'><span class="o">[</span><span class="mi">24</span><span class="o">]</span> <span class="n">pry</span><span class="p">(</span><span class="n">main</span><span class="p">)</span><span class="o">*</span>   <span class="n">a</span> <span class="o">+</span> <span class="n">b</span>
</span><span class='line'><span class="o">[</span><span class="mi">24</span><span class="o">]</span> <span class="n">pry</span><span class="p">(</span><span class="n">main</span><span class="p">)</span><span class="o">*</span> <span class="k">end</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="kp">nil</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># キーがシンボルなハッシュはそのまま引数に渡せる</span>
</span><span class='line'><span class="o">[</span><span class="mi">26</span><span class="o">]</span> <span class="n">pry</span><span class="p">(</span><span class="n">main</span><span class="p">)</span><span class="o">&gt;</span> <span class="n">h1</span> <span class="o">=</span> <span class="p">{</span><span class="ss">a</span><span class="p">:</span> <span class="mi">10</span><span class="p">,</span> <span class="ss">b</span><span class="p">:</span> <span class="mi">20</span><span class="p">}</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="p">{</span><span class="ss">:a</span><span class="o">=&gt;</span><span class="mi">10</span><span class="p">,</span> <span class="ss">:b</span><span class="o">=&gt;</span><span class="mi">20</span><span class="p">}</span>
</span><span class='line'><span class="o">[</span><span class="mi">27</span><span class="o">]</span> <span class="n">pry</span><span class="p">(</span><span class="n">main</span><span class="p">)</span><span class="o">&gt;</span> <span class="n">f</span><span class="p">(</span><span class="n">h1</span><span class="p">)</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="mi">30</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># キーが文字列なハッシュやHashWithIndifferentAccessはだめ</span>
</span><span class='line'><span class="o">[</span><span class="mi">28</span><span class="o">]</span> <span class="n">pry</span><span class="p">(</span><span class="n">main</span><span class="p">)</span><span class="o">&gt;</span> <span class="n">h2</span> <span class="o">=</span> <span class="no">HashWithIndifferentAccess</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">h1</span><span class="p">)</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="p">{</span><span class="s2">&quot;a&quot;</span><span class="o">=&gt;</span><span class="mi">10</span><span class="p">,</span> <span class="s2">&quot;b&quot;</span><span class="o">=&gt;</span><span class="mi">20</span><span class="p">}</span>
</span><span class='line'><span class="o">[</span><span class="mi">29</span><span class="o">]</span> <span class="n">pry</span><span class="p">(</span><span class="n">main</span><span class="p">)</span><span class="o">&gt;</span> <span class="n">f</span><span class="p">(</span><span class="n">h2</span><span class="p">)</span>
</span><span class='line'><span class="ss">ArgumentError</span><span class="p">:</span> <span class="n">wrong</span> <span class="n">number</span> <span class="n">of</span> <span class="n">arguments</span> <span class="p">(</span><span class="mi">1</span> <span class="k">for</span> <span class="mi">0</span><span class="p">)</span>
</span><span class='line'><span class="n">from</span> <span class="p">(</span><span class="n">pry</span><span class="p">):</span><span class="mi">55</span><span class="ss">:in</span> <span class="sb">`f`</span>
</span><span class='line'><span class="o">[</span><span class="mi">30</span><span class="o">]</span> <span class="n">pry</span><span class="p">(</span><span class="n">main</span><span class="p">)</span><span class="o">&gt;</span> <span class="n">h3</span> <span class="o">=</span> <span class="p">{</span><span class="s2">&quot;a&quot;</span> <span class="o">=&gt;</span> <span class="mi">10</span><span class="p">,</span> <span class="s2">&quot;b&quot;</span> <span class="o">=&gt;</span> <span class="mi">20</span> <span class="p">}</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="p">{</span><span class="s2">&quot;a&quot;</span><span class="o">=&gt;</span><span class="mi">10</span><span class="p">,</span> <span class="s2">&quot;b&quot;</span><span class="o">=&gt;</span><span class="mi">20</span><span class="p">}</span>
</span><span class='line'><span class="o">[</span><span class="mi">31</span><span class="o">]</span> <span class="n">pry</span><span class="p">(</span><span class="n">main</span><span class="p">)</span><span class="o">&gt;</span> <span class="n">f</span><span class="p">(</span><span class="n">h3</span><span class="p">)</span>
</span><span class='line'><span class="ss">ArgumentError</span><span class="p">:</span> <span class="n">wrong</span> <span class="n">number</span> <span class="n">of</span> <span class="n">arguments</span> <span class="p">(</span><span class="mi">1</span> <span class="k">for</span> <span class="mi">0</span><span class="p">)</span>
</span><span class='line'><span class="n">from</span> <span class="p">(</span><span class="n">pry</span><span class="p">):</span><span class="mi">55</span><span class="ss">:in</span> <span class="sb">`f`</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># キーワード引数の一部のみのハッシュはあり</span>
</span><span class='line'><span class="o">[</span><span class="mi">32</span><span class="o">]</span> <span class="n">pry</span><span class="p">(</span><span class="n">main</span><span class="p">)</span><span class="o">&gt;</span> <span class="n">h4</span> <span class="o">=</span> <span class="p">{</span><span class="ss">a</span><span class="p">:</span> <span class="mi">30</span><span class="p">}</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="p">{</span><span class="ss">:a</span><span class="o">=&gt;</span><span class="mi">30</span><span class="p">}</span>
</span><span class='line'><span class="o">[</span><span class="mi">33</span><span class="o">]</span> <span class="n">pry</span><span class="p">(</span><span class="n">main</span><span class="p">)</span><span class="o">&gt;</span> <span class="n">f</span><span class="p">(</span><span class="n">h4</span><span class="p">)</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="mi">32</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 併用はダメ</span>
</span><span class='line'><span class="o">[</span><span class="mi">34</span><span class="o">]</span> <span class="n">pry</span><span class="p">(</span><span class="n">main</span><span class="p">)</span><span class="o">&gt;</span> <span class="n">f</span><span class="p">(</span><span class="n">h4</span><span class="p">,</span> <span class="ss">b</span><span class="p">:</span> <span class="mi">30</span><span class="p">)</span>
</span><span class='line'><span class="ss">ArgumentError</span><span class="p">:</span> <span class="n">wrong</span> <span class="n">number</span> <span class="n">of</span> <span class="n">arguments</span> <span class="p">(</span><span class="mi">1</span> <span class="k">for</span> <span class="mi">0</span><span class="p">)</span>
</span><span class='line'><span class="n">from</span> <span class="p">(</span><span class="n">pry</span><span class="p">):</span><span class="mi">55</span><span class="ss">:in</span> <span class="sb">`f`</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># おまけ</span>
</span><span class='line'><span class="o">[</span><span class="mi">37</span><span class="o">]</span> <span class="n">pry</span><span class="p">(</span><span class="n">main</span><span class="p">)</span><span class="o">&gt;</span> <span class="k">def</span> <span class="nf">g</span><span class="p">(</span><span class="n">c</span><span class="p">,</span> <span class="ss">a</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="ss">b</span><span class="p">:</span> <span class="mi">2</span><span class="p">)</span>
</span><span class='line'><span class="o">[</span><span class="mi">37</span><span class="o">]</span> <span class="n">pry</span><span class="p">(</span><span class="n">main</span><span class="p">)</span><span class="o">*</span>   <span class="n">a</span> <span class="o">+</span> <span class="n">b</span> <span class="o">+</span> <span class="n">c</span>
</span><span class='line'><span class="o">[</span><span class="mi">37</span><span class="o">]</span> <span class="n">pry</span><span class="p">(</span><span class="n">main</span><span class="p">)</span><span class="o">*</span> <span class="k">end</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="kp">nil</span>
</span><span class='line'><span class="o">[</span><span class="mi">41</span><span class="o">]</span> <span class="n">pry</span><span class="p">(</span><span class="n">main</span><span class="p">)</span><span class="o">&gt;</span> <span class="n">g</span><span class="p">(</span><span class="mi">30</span><span class="p">,</span> <span class="n">h1</span><span class="p">)</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="mi">60</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[BoxenやめてBrewfile+homebrew-caskにした]]></title>
    <link href="http://nomnel.net/blog/boxen-to-brewfile/"/>
    <updated>2013-12-30T21:30:00+09:00</updated>
    <id>http://nomnel.net/blog/boxen-to-brewfile</id>
    <content type="html"><![CDATA[<p>この前Boxen試してみたんだけど自分一人での構成管理には大袈裟過ぎるなと思って使うの止めてた. もっとライトに, マシン買い替えたときとかにセットアップ楽になる程度でも良かった.</p>

<!-- more -->


<p>そしたら<a href="http://deeeet.com/writing/2013/12/23/brewfile/">BrewfileでHomebrewパッケージを管理する</a>って記事があったので早速やってみた. 結論, すごくよかった.</p>

<p>やり方は上の記事(と<a href="http://blog.livedoor.jp/sonots/archives/35251881.html">「BrewfileでHomebrewパッケージを管理する」をやってみた</a>)に書いてあるとおりなんだけど</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># Make sure using latest Homebrew
</span><span class='line'>update
</span><span class='line'>
</span><span class='line'># Update already-installed formula (takes too much time, I will do it manually later)
</span><span class='line'># upgrade
</span><span class='line'>
</span><span class='line'># Add Repository
</span><span class='line'>tap homebrew/versions || true
</span><span class='line'>tap phinze/homebrew-cask || true
</span><span class='line'>tap homebrew/binary || true
</span><span class='line'>
</span><span class='line'># Packages
</span><span class='line'>install zsh
</span><span class='line'>install git
</span><span class='line'>
</span><span class='line'># .dmg
</span><span class='line'>cask install google-chrome
</span><span class='line'>cask install firefox
</span><span class='line'>
</span><span class='line'># Remove outdated versions
</span><span class='line'>cleanup</span></code></pre></td></tr></table></div></figure>


<p>みたいに書いた<code>Brewfile</code>を作って, そのファイルがあるディレクトリで<code>brew bundle</code>  すればいい.</p>

<p>このときChromeとかは<code>/opt/homebrew-cask/Caskroom/google-chrome/stable-channel/Google Chrome.app</code>から<code>/Users/nomnel/Applications</code>にリンクはられる感じになる. (KeyRemap4MacBookとか<code>/Applications</code>に直接入るのもある).</p>

<p>なのですでにインストールされてるアプリをさらにbrewで入れても(多分)大丈夫. <code>brew bundle</code>終わったあとにかぶったやつだけ消せばいいと思う.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sublime Text 2で日本語の変換候補をTabで選択]]></title>
    <link href="http://nomnel.net/blog/st2-japanese-input/"/>
    <updated>2013-11-20T09:00:00+09:00</updated>
    <id>http://nomnel.net/blog/st2-japanese-input</id>
    <content type="html"><![CDATA[<p>Sublime Text 2で日本語入力をする際, Tabで変換候補を選べない問題を解決する.</p>

<p><code>Preferences &gt; Key Bindings - Default</code>を選択すると<code>Default (OSX).sublime-keymap</code>(Macの場合)というファイルが開くので, 93~99行目辺りにある</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>{ "keys": ["tab"], "command": "insert_best_completion", "args": {"default": "\t", "exact": true} },
</span><span class='line'>{ "keys": ["tab"], "command": "insert_best_completion", "args": {"default": "\t", "exact": false},
</span><span class='line'>  "context":
</span><span class='line'>  [
</span><span class='line'>      { "key": "setting.tab_completion", "operator": "equal", "operand": true }
</span><span class='line'>  ]
</span><span class='line'>},</span></code></pre></td></tr></table></div></figure>


<p>をコメントアウトして保存.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SinatraでActiveRecord使う]]></title>
    <link href="http://nomnel.net/blog/sinatra-active-record/"/>
    <updated>2013-10-21T21:45:00+09:00</updated>
    <id>http://nomnel.net/blog/sinatra-active-record</id>
    <content type="html"><![CDATA[<p><a href="http://nomnel.net/blog/sinatra-hello-world/">SinatraでHello Worldするまで</a>の続きとして. SQLiteの場合. <!-- more --></p>

<p>Gemfileに以下を追加してbundle installする.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="s1">&#39;sinatra-activerecord&#39;</span>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;sqlite3&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>DB接続部分を書く. とりあえずapp.rbに書いた.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;sinatra&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;active_record&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span><span class="o">.</span><span class="n">establish_connection</span><span class="p">(</span>
</span><span class='line'>  <span class="ss">adapter</span><span class="p">:</span> <span class="s1">&#39;sqlite3&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="ss">database</span><span class="p">:</span> <span class="s1">&#39;development.sqlite3&#39;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 以下省略</span>
</span></code></pre></td></tr></table></div></figure>


<p>Rakefile書く.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;sinatra/activerecord/rake&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;./app&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>これで<code>rake db:migrate</code>とか出来るようになった. 今回はとりあえずusersテーブル作る. <code>rake -T</code>すれば可能なコマンド一覧が見れる.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">bundle</span> <span class="nb">exec</span> <span class="n">rake</span> <span class="ss">db</span><span class="p">:</span><span class="n">create_migration</span> <span class="no">NAME</span><span class="o">=</span><span class="n">create_users</span>
</span></code></pre></td></tr></table></div></figure>


<p>するとdb/migrateの中にmigrationファイルが作られるので編集する.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">CreateUsers</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Migration</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">change</span>
</span><span class='line'>    <span class="n">create_table</span> <span class="ss">:users</span> <span class="k">do</span> <span class="o">|</span><span class="n">t</span><span class="o">|</span>
</span><span class='line'>      <span class="n">t</span><span class="o">.</span><span class="n">string</span> <span class="ss">:name</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">t</span><span class="o">.</span><span class="n">timestamps</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>終わったらDBに反映.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">bundle</span> <span class="nb">exec</span> <span class="n">rake</span> <span class="ss">db</span><span class="p">:</span><span class="n">migrate</span>
</span></code></pre></td></tr></table></div></figure>


<p>app.rbで使ってみる.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># 上は省略</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">User</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">get</span> <span class="s1">&#39;/&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="s2">&quot;Hello </span><span class="si">#{</span><span class="no">User</span><span class="o">.</span><span class="n">count</span><span class="si">}</span><span class="s2"> users!&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>あとは</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">bundle</span> <span class="nb">exec</span> <span class="n">rackup</span>
</span></code></pre></td></tr></table></div></figure>


<p>して, <code>http://localhost:9292</code>にアクセスして確認.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SinatraでHello Worldするまで]]></title>
    <link href="http://nomnel.net/blog/sinatra-hello-world/"/>
    <updated>2013-10-21T21:30:00+09:00</updated>
    <id>http://nomnel.net/blog/sinatra-hello-world</id>
    <content type="html"><![CDATA[<p>続き-> <a href="http://nomnel.net/blog/sinatra-active-record/">SinatraでActiveRecord使う</a></p>

<!-- more -->


<p>Gemfile作ってbundle installする.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">source</span> <span class="s1">&#39;https://rubygems.org&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;sinatra&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>本体書く. app.rbに書くとする.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;sinatra&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">get</span> <span class="s1">&#39;/&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="s1">&#39;Hello World!&#39;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>config.ru書く.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;./app&#39;</span>
</span><span class='line'><span class="n">run</span> <span class="ss">Sinatra</span><span class="p">:</span><span class="ss">:Application</span>
</span></code></pre></td></tr></table></div></figure>


<p>起動する.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">bundle</span> <span class="nb">exec</span> <span class="n">rackup</span>
</span></code></pre></td></tr></table></div></figure>


<p>で, <code>http://localhost:9292</code>にブラウザでアクセス.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[惚れさせLingrというbotを作った]]></title>
    <link href="http://nomnel.net/blog/release-horesase-lingr/"/>
    <updated>2013-09-06T18:30:00+09:00</updated>
    <id>http://nomnel.net/blog/release-horesase-lingr</id>
    <content type="html"><![CDATA[<p>関西Ruby会議に行ってやる気満々だったのにネットとPCの無い日々が続いたのでむしゃくしゃして作りました.</p>

<p><img src="http://gyazo.com/151a258e4ec459499fd999852c7f513e.png" alt="" /></p>

<!-- more -->


<h3>何これ</h3>

<p>「misawa」と呟くと<a href="http://jigokuno.com/">地獄のミサワの女に惚れさす名言集</a>からランダムに投稿するLingr用のbotです.</p>

<h3>なんで作ったの</h3>

<p><a href="http://regional.rubykaigi.org/kansai05">関西Ruby会議05</a>の<a href="https://twitter.com/takehiro0740">フルタイムの学生さん</a>発表中にLingrとは違うチャットサービスで動いている画像が出てきました. 直接顔を合さずリモートで働いていると空気感がうんちゃらかんちゃらになるので冗談みたいなものが混じってると良い的なことを仰ってて, いいなーLingrにも欲しいなーもうあるかなーかぶってもいいかーと思って作りました.</p>

<h3>どう使うの</h3>

<p>LingrのOwner権限を持っている部屋に<a href="http://lingr.com/bot/horesase">horesase</a>を招待してください. その部屋で「misawa」とのみ投稿すると名言が返ってきます.</p>

<h3>なにで作ったの</h3>

<p>Sinatra + PostgreSQL on Herokuです. Sinatraほぼ初めてでしたがシンプルでいいですね.</p>

<h3>どれぐらいで作ったの</h3>

<p>途中ハマるところがあって4時間ぐらいかかりました.</p>

<h3>コード</h3>

<p><a href="https://github.com/nomnel/horesase-lingr">Github</a>にあります.</p>

<h3>最後に</h3>

<p><a href="https://twitter.com/nomnel">nomnel</a>は就職先を募集しています！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AppReviewz for iOSというサイトを作りました]]></title>
    <link href="http://nomnel.net/blog/ios-appreviewz/"/>
    <updated>2013-08-26T14:00:00+09:00</updated>
    <id>http://nomnel.net/blog/ios-appreviewz</id>
    <content type="html"><![CDATA[<p>Rails4で<a href="http://ios.appreviewz.net/">AppReviewz for iOS</a>というサイトを作りました. 初めて作ったwebサービスです.</p>

<p><img src="http://gyazo.com/e13ffef560d063d3dc1ca46e71c94f87.png" alt="" /></p>

<!-- more -->


<p>大体のことは<a href="http://nomnel.net/blog/develop-web-service/">途中経過</a>に書いたので以下, 一問一答形式で.</p>

<h2>一般的な内容</h2>

<h3>何するやつ？</h3>

<p>iOSアプリのレビューとレビューされたアプリをまとめて表示するサイトです.</p>

<h3>新規性どうですか</h3>

<p>新規性ダメです. 要はRSSですので.</p>

<h3>なんで作ったの？</h3>

<p>新しいアプリ探したい時にレビューサイトを参考にしようと思ったのですが, 複数サイトを見るのは面倒だしRSS登録してもノイズが多いので抽出して一箇所にまとめたくなったからです.</p>

<h3>ターゲットだれですか</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>　＼　　　　　　　　　　　　　　　　　　　　/
</span><span class='line'>　　 ＼　　丶　　　　 　 i.　　 |　　　　　 /　　 　 ./　　　　 　 ／
</span><span class='line'>　　　　＼　　ヽ　　　　　i. 　 .|　　　　　/　　　 /　　　　　 ／
</span><span class='line'>　　　　　 ＼　　ヽ　　　　i　　|　　　　 /　　　/　　　　　／
</span><span class='line'>　　　＼
</span><span class='line'>　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　-‐
</span><span class='line'>　　ー
</span><span class='line'>　_＿　　　　　　　　　　わ　た　し　で　す　　　　　　　　　　　　--
</span><span class='line'>　　　　　二　　　　　　　 　　／￣＼　　　　　　　　　　　＝　二
</span><span class='line'>　　￣　　　　　　　　　　　　|　＾o＾　|　　　　　　　　　　　　　　　　￣
</span><span class='line'>　　　　-‐　　　　　　　　　　 ＼＿／ 　　　　　　　　　　　　　　　‐-
</span><span class='line'>
</span><span class='line'>　　　　／
</span><span class='line'>　　　　　　　　　　　　/　　　　　　　　　　　　　　　ヽ　　　　　 ＼
</span><span class='line'>　　　　／　　　　　　　　　　　　　　　　　　　　丶　　　　 ＼
</span><span class='line'>　　 ／　　　/　　　 /　　　　　　|　　　i,　　　 　 丶　　　　　＼
</span><span class='line'>　／　　　 /　　　　/　　　　　　 |　　　 i,　　　　　　丶　　　　　＼</span></code></pre></td></tr></table></div></figure>


<p>他にRSSを知らない人や登録が面倒な人もターゲットになるかもしれません.</p>

<h3>今後の方針は？</h3>

<p><a href="http://nomnel.net/blog/develop-web-service/">途中経過</a>で書いたように</p>

<ul>
<li>レビューの人気ランキング</li>
<li>開発者(or ユーザ)がレビューを投稿できるように</li>
</ul>


<p>を追加するかもしれません.</p>

<h2>技術とか</h2>

<h3>構成は？</h3>

<p>Rails4 + MySQL + nginx + Unicorn です. Sqaleで動いています.</p>

<h3>なぜSqale？</h3>

<p>キャンペーンで無料枠を一つ持っていたからです. 実際楽で良いです.</p>

<h3>リポジトリは？</h3>

<p><a href="https://github.com/nomnel/ios-appreviewz">こちら</a>です. 昨日まで設定をベタ書きしていたためログはありません.</p>

<h3>開発期間は？</h3>

<p>飛び飛びだったので正確ではないですが, 大体半月ぐらいだと思います.</p>

<h3>ココこうした方がいいよ！</h3>

<p>ありがとうございます！</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>|ωﾟ)ﾁﾗ
</span><span class='line'>|ﾟд)ｿｫー
</span><span class='line'>|彡 ｻｯ
</span><span class='line'>
</span><span class='line'>＿人人人人人人人人人人人＿
</span><span class='line'>＞　PR || issueうれしい　＜
</span><span class='line'>￣Y^Y^Y^Y^Y^Y^Y^Y^Y^Y￣</span></code></pre></td></tr></table></div></figure>


<h2>まとめ的な</h2>

<p>初めて作ったwebサービスですが, 流行る要素(ソーシャルとか)も特に無いしなぁ…と告知せず自分一人で使っていましたが, 告知することで一つの区切りが出来ること, フィードバック(無いことも含めて)を考えるとブログ一つ書くのを渋っているのは勿体無いと思いました. これからはどんどん作ってどんどん公開していきたいです.</p>

<p>オレはようやく登りはじめたばかりだからな。 このはてしなく遠い開発坂をよ…</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[「アイデアのつくり方」を読んだ]]></title>
    <link href="http://nomnel.net/blog/a-technique-for-producing-ideas/"/>
    <updated>2013-08-23T17:00:00+09:00</updated>
    <id>http://nomnel.net/blog/a-technique-for-producing-ideas</id>
    <content type="html"><![CDATA[<p>アイデアのつくり方を読んだ.</p>

<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=nomnel11-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4484881047" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<!-- more -->


<p>52ページの本文(本全体は102ページ)にエッセンスが詰められている.</p>

<p>それによると, アイデアの原理とは</p>

<ol>
<li>アイデアとは既存の要素の新しい組み合わせ以外のなにものでもない</li>
<li>新しい組み合わせを作りだす才能は事物の関連性をみつけだす才能によって高められる</li>
</ol>


<p>であり, アイデアをつくりだす方法は</p>

<ol>
<li>資料を収集する</li>
<li>資料を咀嚼する</li>
<li>問題を放棄する</li>
<li>アイデアが訪れる</li>
<li>アイデアを現実に具体化する</li>
</ol>


<p>のステップを辿ることであるという.</p>

<p>当たり前のことに見えるが, 本質だけを抜き出すと当たり前のように簡単なことになってしまう, というのはよくあることだと思う. また, 「説明は簡単至極だが実際にコレを実行するとなると最も困難な種類の知能労働が必要なので, この公式を手に入れたといっても, 誰もがこれを使いこなすというわけにはいかないということである. 」と筆者は言う.</p>

<p>個人的には, アイデアをつくりだすことが天才に限られた能力ではなく, 上達が可能な技術であるということに希望を感じた.</p>

<p>というのも, <a href="http://nomnel.net/blog/develop-web-service/">自分でWebサービスを作ろうとしたとき</a>, ソーシャル要素のあるサービスが全く思いつかなかったのだけれど, <a href="http://internkyuden.tumblr.com/post/58597061613/web">別のFjordインターン生が作っているサービス</a>ではすごくいい感じのソーシャル性があって, すごいと言いたい反面, 自分が残念に思えてやる気を無くしていたからだ.</p>

<p>しかしアイデアをつくりだす第一歩に「資料を収集する」とあるように, ひきこもり無職の自分にはそんなサービスを思いつくための資料(経験)がそもそも足りていないわけで, 家から出て新しい趣味を見つけアクティブに活動し友人達と触れ合えってウェーイすれば自分にもアイデアを得られるかもしれない!!やった!!ウェーイｗｗｗ</p>

<p>絶望だった.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[すごいH本を読んだ]]></title>
    <link href="http://nomnel.net/blog/learn-you-a-haskell-for-great-good/"/>
    <updated>2013-08-23T14:00:00+09:00</updated>
    <id>http://nomnel.net/blog/learn-you-a-haskell-for-great-good</id>
    <content type="html"><![CDATA[<p>すごいHaskellたのしく学ぼう!を読んだ.</p>

<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=nomnel11-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4274068854" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<!-- more -->


<p>他にやるべきことがあるのに逃避的に取り組むと普段より集中できて便利. と言っても本当に読んだだけ(写経とかしてない)なのに2日かかった.</p>

<p>散々言われていると思うけど, とても分かりやすく書かれていると感じた. 毎度きちんと説明してくれるので, ビクビクしていたけれど圏論の前提知識は必要ではない. Haskellによる実装(型も)を載せてくれているのが何よりもありがたいかもしれない.</p>

<p>モナドやファンクターなど, Haskellerな人たちが発する暗号についてゆるふわでも理解できるようになりたいと思ってこの本を読んだけどその目的は達成されたと思う. あと, 抽象をきれいに組み合わせている感じがとても良くてHaskellやりたさが高まった.</p>

<p>ゆるふわなので定義をメモして置かなかったのは後悔している. 次に逃避するときにもう一度読みなおしてきちんと理解したい. あと圏論したい.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GaucheのHEADをインストールする]]></title>
    <link href="http://nomnel.net/blog/gauche-head/"/>
    <updated>2013-08-14T02:45:00+09:00</updated>
    <id>http://nomnel.net/blog/gauche-head</id>
    <content type="html"><![CDATA[<p>math.primeとかdotimesで回数だけ指定出来るようになってたりとかあるので開発版のGaucheを使いたい.<!-- more --></p>

<p>まず, 最新版のGaucheが必要なのでインストール.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>brew install gauche
</span></code></pre></td></tr></table></div></figure>


<p>で開発版をgithubから持ってくる.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>git clone git@github.com:shirok/Gauche.git
</span></code></pre></td></tr></table></div></figure>


<p>インストール方法は<code>HACKING</code>というファイルを参照する. 今回は</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>./DIST gen
</span></code></pre></td></tr></table></div></figure>


<p>してから, いつもどおり</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>./configure
</span><span class='line'>make
</span><span class='line'>make install
</span></code></pre></td></tr></table></div></figure>


<p>すればよかった.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>gosh -V
</span><span class='line'><span class="c"># -&gt; Gauche scheme shell, version 0.9.4_pre3 [utf-8,pthreads], x86_64-apple-darwin12.4.0</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CentOSでのバージョンとアーキテクチャの確認]]></title>
    <link href="http://nomnel.net/blog/centos-version-and-architecture/"/>
    <updated>2013-08-12T16:30:00+09:00</updated>
    <id>http://nomnel.net/blog/centos-version-and-architecture</id>
    <content type="html"><![CDATA[<p>バージョン</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>cat /etc/redhat-release
</span><span class='line'><span class="c"># -&gt; CentOS release 6.4 (Final)</span>
</span></code></pre></td></tr></table></div></figure>


<p>アーキテクチャ</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>arch
</span><span class='line'><span class="c"># (64bit)-&gt; x86_64</span>
</span><span class='line'><span class="c"># (32bit)-&gt; i686</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Vagrantで作ったVMからbase boxを作る]]></title>
    <link href="http://nomnel.net/blog/create-vagrant-base-box/"/>
    <updated>2013-08-10T14:00:00+09:00</updated>
    <id>http://nomnel.net/blog/create-vagrant-base-box</id>
    <content type="html"><![CDATA[<p><a href="http://www.vagrantbox.es/">DLしてきたbase box</a>からちょっとだけいじったものを自分用のbase boxとして持っておきたいとき.<!-- more --></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># VM_NAMEはVirtual Boxで表示されているもの(General-&gt;Name)</span>
</span><span class='line'>vagrant package  --base VM_NAME
</span></code></pre></td></tr></table></div></figure>


<p>とすると, カレントディレクトリに<code>package.box</code>というファイルが出来る. これがbase boxなので, あとはvagrantに登録すれば普通にVMを作成できる.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>vagrant box add mybox package.box
</span><span class='line'>mkdir <span class="nb">test</span>
</span><span class='line'><span class="nb">cd test</span>
</span><span class='line'>vagrant init mybox
</span><span class='line'>vagrant up
</span><span class='line'>vagrant ssh
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[考えたくない]]></title>
    <link href="http://nomnel.net/blog/diary-2/"/>
    <updated>2013-07-30T23:45:00+09:00</updated>
    <id>http://nomnel.net/blog/diary-2</id>
    <content type="html"><![CDATA[<p>改蔵か絶望先生に「それを言うのはお前で一万人目だ」みたいなネタあったと思うんだけど, 一日に考えたり決めたりできる回数って決まってると思う.</p>

<p>正確にはMPみたいな感じで総量があって体調によって増減したりはするんだけど, 一回考えるごとにいくらか使う. 複雑なことだとより多く使う.</p>

<p>KP(考えポイント)は日常生活用や仕事用という様には分けれない. どんな服を着ようかとかこの道を通って行こうとかでも使われる. 人間関係で悩んだりすると仕事も進まなくなるのはこのせい.</p>

<p>じゃあどうすればいいかって考えるとやっぱりKPは消費されるんだけど, 考える対象を減らすことというのが自然で妥当で安直な解だと思う. 服は着ないし家から出ない. 人間関係はTwitterでふぁぼるだけ, ぐらいすると随分すっきりすると思う.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[jQuery.each内でbreakやcontinueする]]></title>
    <link href="http://nomnel.net/blog/break-or-continue-in-jquery-each/"/>
    <updated>2013-07-25T20:30:00+09:00</updated>
    <id>http://nomnel.net/blog/break-or-continue-in-jquery-each</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='coffeescript'><span class='line'><span class="nx">$</span><span class="p">.</span><span class="nx">each</span> <span class="nx">obj</span><span class="p">,</span> <span class="nf">(i, val) -&gt;</span>
</span><span class='line'>  <span class="c1"># continueの代わり</span>
</span><span class='line'>  <span class="k">return</span> <span class="kc">true</span> <span class="k">if</span> <span class="nx">i</span> <span class="o">==</span> <span class="mi">1</span>
</span><span class='line'>
</span><span class='line'><span class="nx">$</span><span class="p">.</span><span class="nx">each</span> <span class="nx">obj</span><span class="p">,</span> <span class="nf">(i, val) -&gt;</span>
</span><span class='line'>  <span class="c1"># breakの代わり</span>
</span><span class='line'>  <span class="k">return</span> <span class="kc">false</span> <span class="k">if</span> <span class="nx">i</span> <span class="o">==</span> <span class="mi">1</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Webサービスを作ってみる]]></title>
    <link href="http://nomnel.net/blog/develop-web-service/"/>
    <updated>2013-07-24T12:30:00+09:00</updated>
    <id>http://nomnel.net/blog/develop-web-service</id>
    <content type="html"><![CDATA[<p>先週からインターンはお休みをいただいてWebサービスを作っている. <!-- more -->今の見た目はこんな感じ(ま, まだ全然完成じゃないんだからねっ(言い訳1))</p>

<p><img src="http://gyazo.com/121d4b1284e97406b2df6c29b3af0250.png" alt="" /></p>

<p>で, 要はiPhoneアプリのレビューまとめを作ろうとしている.</p>

<h3>基準</h3>

<p>最初に以下の項目について考えた.</p>

<ol>
<li>実現性 - 最初は1~2週間で十分出来るもの</li>
<li>コンテンツの確保と更新 - 自分がコンテンツ作者だと続かない</li>
<li>ある程度の商圏 - 全く需要無いのもつらい, データで開発方針決めたりしたい</li>
<li>興味 - AppStoreのランキング以外の方法でアプリを知りたい</li>
<li>売上 - どうしたらより見てもらえるかなどのデータ欲しい</li>
<li>問題の解決 - しょぼくても何かしら世の中の役に立つこと</li>
</ol>


<p>偉そうに並べているけどなかなか条件をクリア出来るものが思いつかずに3日ぐらいかかった.</p>

<h3>サービスの意味</h3>

<p>こんなことを考えてた.</p>

<ol>
<li>アプリを見つける場所を増やす
 <p>自分が探すとき, 「AppStoreのランキングを見る -> たまにレビューを検索する -> 購入」という流れがほとんどだった. これはアイコンやタイトル, 評価をざっと眺めてから気になったものだけを細かく知りたいということなのだけれど, 既存のレビューサイトだとざっと眺めるのが難しうえに, 複数のレビューサイトを見るのも面倒で, 一サイトだけだと更新頻度にも限度があって不満だった.</p></li>
<li>レビューサイト界隈の裾野を広げる
 <p>レビューサイトで思い浮かぶのって2つ3つ程度しかない. 多分みんなも同様で, 結果, 有名サイトがほとんどのアクセスを占めているんだと思った. もしレビュー単位で同列に扱えればマイナーサイトでもアクセスが得られて, {中略}結果, レビューサイト界隈の多様性が増えたらいいと思う.</p></li>
<li>個人開発者のアプリでも注目されやすくする
 <p>有名レビューサイトにレビュー依頼をしても採用されないかもしれないことを考えるとすごくもったいない. なので開発者が自分で書いたレビューをプレスリリース的に載せる場所があればいいんじゃないかって思った.</p></li>
</ol>


<h3>開発方針</h3>

<ol>
<li>最初は最小の機能で</li>
<li>必要な物から作る</li>
<li>汚くてもいい</li>
<li>手間かけない</li>
</ol>


<p>とにかく早く作ることを目指した.</p>

<h3>必要な機能</h3>

<ol>
<li>レビューのスクレイピング</li>
<li>レビューと紹介されているアプリの表示 (最初はiPhone向けに作る)</li>
</ol>


<p>データの取得と更新はスクレイピングだけで良いのでタスクをcronで回すようにすれば管理画面も要らない, 素敵!</p>

<h3>予定</h3>

<ol>
<li>スクレイピング -> プロトタイプ2日 + 回しながらバグ修正とか追加とか2日</li>
<li>表示 -> 3日(CSS苦手)</li>
<li>本番環境の準備 -> 1.5日</li>
</ol>


<h3>実際</h3>

<ol>
<li>スクレイピング -> プロトタイプ5日 + バグ修正1日弱(もう増えないと思う)</li>
<li>表示 -> 2日目(途中), 後2日見込み</li>
</ol>


<p>以下ハイパー言い訳タイム.</p>

<h3>悩んだ(でいる) || 時間かかったところ</h3>

<ol>
<li>汚さをどこまで許容するか
 <p>自分だけが読むもの(<a href="https://github.com/nomnel/ProjectEuler/blob/master/086.scm">これ</a>とか)は1文字変数とか長い関数でもいいやってなるんだけど, 人が見る可能性考えると読みやすくしなきゃってなってそのために時間を浪費していると思った. 汚くてもいいやって思えたのは作り始めてしばらくしてからだったので, 既存のコードとの汚さのバランスとか考えてもっと時間を浪費することになった.</p></li>
<li>最小の機能とは
 <p>最小の機能と言いつつ範囲をはっきりさせてなかったので良くなかった. まだ必要ないrouteやcontrollerを作ってしまった. 範囲を決めたのは画面デザインを考え始めてからで, あんまり遷移させたくないなって思ったから. 必要な物から作ると決めていたので傷はそこまで深くなかったのは良かった.</p></li>
<li>画像を保存するか
 <p>アプリのアイコンを保存しておくか, Appleのにリンク貼るかも少し悩んだ. 工数増やしたくないし, AppBankがやってて怒られてないならいっかと思ってリンクにした.</p></li>
<li>何をどのように表示するか
 <p>何を表示するかとかユーザが必要な情報は何かとか難しい. レビューまとめなのでレビューを目立たせたいけど, 本文まで表示するとレビューサイトへのタダ乗りになるので良くない. レビューされたアプリを表示しないと見た目的にただのリンク集になってしまうし, 表示したら今度は一つのレビューにつき何個まで表示するのかとか, どこまで詳細に表示するかも悩むことになる. 今は, 最小限の表示にしておいてユーザ操作で残りを表示するのがいいかなって思ってる.</p></li>
</ol>


<p>やっぱりというか, 悩んでることは実際に手を動かし始めると簡単に解決することが多い. とりあえずやってみるの大事. &#8220;Shut the f**k up and write some code.&#8221;な.</p>

<h3>他に</h3>

<p>私事だけど開発に一番影響大きかったのが人生に関わる提案をいただいたこと. 正直なところ開発どころではなかったけど, やっと結論と気持ちの整理が出来た.</p>

<h3>今後</h3>

<p>現状だとただのリンク集なのでリリース後には</p>

<ol>
<li>レビューの人気ランキング</li>
<li>開発者(or ユーザ)がレビューを投稿できるように</li>
</ol>


<p>などサイトの特徴を出す機能を開発していきたい. 合わせて</p>

<ol>
<li>アプリ別</li>
<li>レビューサイト別</li>
<li>開発者別</li>
<li>カテゴリ別</li>
</ol>


<p>のレビュー一覧画面と, 並べ替え機能を追加していきたい.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Railsで複数テーブルに跨ってincludesする]]></title>
    <link href="http://nomnel.net/blog/rails-multi-table-includes/"/>
    <updated>2013-07-20T23:00:00+09:00</updated>
    <id>http://nomnel.net/blog/rails-multi-table-includes</id>
    <content type="html"><![CDATA[<p>例えば<code>A has_many Bs</code>かつ<code>B has_one C</code>であるとき</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">A</span><span class="o">.</span><span class="n">all</span><span class="o">.</span><span class="n">includes</span><span class="p">(</span><span class="ss">bs</span><span class="p">:</span> <span class="ss">:c</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>とすればよい. さらに<code>B has_many Ds</code>であれば</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">A</span><span class="o">.</span><span class="n">all</span><span class="o">.</span><span class="n">includes</span><span class="p">(</span><span class="ss">bs</span><span class="p">:</span> <span class="o">[</span><span class="ss">:c</span><span class="p">,</span> <span class="ss">:ds</span><span class="o">]</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>となる.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rubyでeachのブロックに複数の値を渡す]]></title>
    <link href="http://nomnel.net/blog/ruby-multi-values-to-each-block/"/>
    <updated>2013-07-20T13:30:00+09:00</updated>
    <id>http://nomnel.net/blog/ruby-multi-values-to-each-block</id>
    <content type="html"><![CDATA[<p>配列で渡す.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">[[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="o">]</span><span class="p">,</span> <span class="o">[</span><span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="o">]].</span><span class="n">each</span><span class="p">{</span><span class="o">|</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="o">|</span> <span class="nb">puts</span> <span class="n">b</span><span class="p">}</span>
</span><span class='line'><span class="c1"># 2</span>
</span><span class='line'><span class="c1"># 4</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># ちなみに</span>
</span><span class='line'><span class="o">[[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="o">]</span><span class="p">,</span> <span class="o">[</span><span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="o">]].</span><span class="n">each</span><span class="p">{</span><span class="o">|</span><span class="n">a</span><span class="o">|</span> <span class="nb">puts</span> <span class="n">a</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span><span class="p">}</span>
</span><span class='line'><span class="c1"># 2</span>
</span><span class='line'><span class="c1"># 4</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Paperclipのsytlesやconvert_optionsの変更を既存のデータにも適用する]]></title>
    <link href="http://nomnel.net/blog/paperclip-refresh-missing-styles/"/>
    <updated>2013-07-18T11:35:00+09:00</updated>
    <id>http://nomnel.net/blog/paperclip-refresh-missing-styles</id>
    <content type="html"><![CDATA[<p>例えば<a href="http://nomnel.net/blog/fjord-day35/">後付で投稿画像を640px x 640pxに統一するようにした</a>ときなど. 既存のデータにもその変更を反映したいときは</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>rake paperclip:refresh:missing_styles
</span></code></pre></td></tr></table></div></figure>


<p>とすればPaperclipで管理している全てのデータ(original以外)を現在のルールで再生成してくれる. ただこれだと変更に関係ないクラスも(ex: BookCoverだけ変更したのにUserImageも)再生成されるので非効率. なので</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">BookCover</span><span class="o">.</span><span class="n">all</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">cover</span><span class="o">|</span>
</span><span class='line'>  <span class="n">cover</span><span class="o">.</span><span class="n">image</span><span class="o">.</span><span class="n">reprocess!</span><span class="p">(</span><span class="o">*</span><span class="kp">nil</span><span class="p">)</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">cover</span><span class="o">.</span><span class="n">errors</span><span class="o">.</span><span class="n">present?</span>
</span><span class='line'>    <span class="c1"># エラー処理</span>
</span><span class='line'>  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>のようにすれば特定のクラスのデータだけ再生成できる.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Railsで多対多の関係を表現する]]></title>
    <link href="http://nomnel.net/blog/rails-many-to-many-relationship/"/>
    <updated>2013-07-14T17:00:00+09:00</updated>
    <id>http://nomnel.net/blog/rails-many-to-many-relationship</id>
    <content type="html"><![CDATA[<p>例えばUserモデルとCompanyモデルが多対多(お互いhas_many)の関係であることを表現するときは, 中間のモデルCompanyUser(アルファベット順にならべる)を使う.</p>

<p>それぞれコードは以下のようになる.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># app/models/user.rb</span>
</span><span class='line'><span class="k">class</span> <span class="nc">User</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:company_users</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:companies</span><span class="p">,</span> <span class="ss">through</span><span class="p">:</span> <span class="ss">:company_users</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># app/models/company.rb</span>
</span><span class='line'><span class="k">class</span> <span class="nc">Company</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:company_users</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:users</span><span class="p">,</span> <span class="ss">through</span><span class="p">:</span> <span class="ss">:company_users</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># app/models/company_user.rb</span>
</span><span class='line'><span class="k">class</span> <span class="nc">CompanyUser</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">belongs_to</span> <span class="ss">:company</span>
</span><span class='line'>  <span class="n">belongs_to</span> <span class="ss">:user</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails4でObserverを使う]]></title>
    <link href="http://nomnel.net/blog/rails4-observer/"/>
    <updated>2013-07-14T16:45:00+09:00</updated>
    <id>http://nomnel.net/blog/rails4-observer</id>
    <content type="html"><![CDATA[<p>Rails4ではobserversが削除されているので, 使用したい場合は<code>rails-observers</code>gemをインストールする.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="s1">&#39;rails-observers&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>もしくはActiveRecordのcallbackで</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Hoge</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">before_save</span> <span class="k">do</span>
</span><span class='line'>    <span class="c1"># 何か処理</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>や</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Hoge</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">before_save</span> <span class="ss">:some_action</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">some_action</span>
</span><span class='line'>    <span class="c1"># 何か処理</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>のようにしてもよい.</p>
]]></content>
  </entry>
  
</feed>
