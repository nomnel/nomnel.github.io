<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[飲んだり寝たり]]></title>
  <link href="http://nomnel.net/atom.xml" rel="self"/>
  <link href="http://nomnel.net/"/>
  <updated>2013-06-13T23:51:43+09:00</updated>
  <id>http://nomnel.net/</id>
  <author>
    <name><![CDATA[nomnel]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Railsでbefore_destroyを使うときの注意点]]></title>
    <link href="http://nomnel.net/blog/rails-before-destroy-with-relation-model/"/>
    <updated>2013-06-06T00:30:00+09:00</updated>
    <id>http://nomnel.net/blog/rails-before-destroy-with-relation-model</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Foo</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:bars</span><span class="p">,</span> <span class="ss">dependent</span><span class="p">:</span> <span class="ss">:destroy</span>
</span><span class='line'>  <span class="n">before_destroy</span> <span class="ss">:do_something</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">do_something</span>
</span><span class='line'>    <span class="k">return</span> <span class="k">if</span> <span class="n">bars</span><span class="o">.</span><span class="n">blank?</span>
</span><span class='line'>    <span class="n">bars</span><span class="o">.</span><span class="n">map</span> <span class="o">&amp;</span><span class="ss">:somethig_cool</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<!-- more -->


<p>このように, <code>has_many</code>(<code>has_one</code>)な関係をものを<code>before_destroy</code>で使うには注意が必要. 上の例だと<code>before_destroy</code>の前にbarsは削除されてしまうので, <code>bars.blank?</code>は必ず真になり<code>bars.map &amp;:somethig_cool</code>は永久に実行されない.</p>

<p>これを避けるには以下のようにする.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Foo</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">before_destroy</span> <span class="ss">:do_something</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:bars</span><span class="p">,</span> <span class="ss">dependent</span><span class="p">:</span> <span class="ss">:destroy</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 以下略</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>before_destroy</code>と<code>has_many</code>の順番を逆にしただけだが, これで期待通りの挙動(<code>before_destroy</code>の後にbarsを削除)になる.</p>

<p>なのでこのようなときはObserverは使えない.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">FooObserver</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Observer</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">before_destroy</span> <span class="n">foo</span>
</span><span class='line'>    <span class="k">return</span> <span class="k">if</span> <span class="n">foo</span><span class="o">.</span><span class="n">bars</span><span class="o">.</span><span class="n">blank?</span>
</span><span class='line'>    <span class="n">foo</span><span class="o">.</span><span class="n">bars</span><span class="o">.</span><span class="n">map</span> <span class="o">&amp;</span><span class="ss">:somethig_cool</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>上の<code>before_destroy</code>はbarsが削除されてから実行される.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rubyでサブクラスの取得]]></title>
    <link href="http://nomnel.net/blog/ruby-get-subclasses/"/>
    <updated>2013-06-05T16:00:00+09:00</updated>
    <id>http://nomnel.net/blog/ruby-get-subclasses</id>
    <content type="html"><![CDATA[<p>直接の子クラスのみなら<!-- more --></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Class</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">subclasses</span>
</span><span class='line'>    <span class="no">ObjectSpace</span><span class="o">.</span><span class="n">each_object</span><span class="p">(</span><span class="no">Class</span><span class="p">)</span><span class="o">.</span><span class="n">select</span><span class="p">{</span><span class="o">|</span><span class="n">klass</span><span class="o">|</span> <span class="n">klass</span><span class="o">.</span><span class="n">superclass</span> <span class="o">==</span> <span class="nb">self</span><span class="p">}</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>子孫クラス(?)全てなら</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Class</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">subclasses</span>
</span><span class='line'>    <span class="no">ObjectSpace</span><span class="o">.</span><span class="n">each_object</span><span class="p">(</span><span class="no">Class</span><span class="p">)</span><span class="o">.</span><span class="n">select</span><span class="p">{</span><span class="o">|</span><span class="n">klass</span><span class="o">|</span> <span class="n">klass</span> <span class="o">&lt;</span> <span class="nb">self</span><span class="p">}</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rubyで配列展開]]></title>
    <link href="http://nomnel.net/blog/ruby-expand-array-as-function-arguments/"/>
    <updated>2013-06-05T01:00:00+09:00</updated>
    <id>http://nomnel.net/blog/ruby-expand-array-as-function-arguments</id>
    <content type="html"><![CDATA[<p>Rubyで引数に与える配列に*をつけると, 配列を展開することができる.<!-- more --></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">hoge</span> <span class="n">args</span>
</span><span class='line'>  <span class="n">args</span> <span class="o">=</span> <span class="o">[*</span><span class="n">args</span><span class="o">]</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">hoge</span> <span class="mi">1</span>      <span class="c1"># =&gt; [1]</span>
</span><span class='line'><span class="n">hoge</span> <span class="o">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="o">]</span> <span class="c1"># =&gt; [1, 2]</span>
</span></code></pre></td></tr></table></div></figure>


<p>便利.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[インターン(53) ブロック機能のバグ修正]]></title>
    <link href="http://nomnel.net/blog/fjord-days-53/"/>
    <updated>2013-06-04T17:00:00+09:00</updated>
    <id>http://nomnel.net/blog/fjord-days-53</id>
    <content type="html"><![CDATA[<p>何日目か考えるのが面倒なので単なる連番にする.</p>

<p>前回の作業週から取り組んでいた<a href="http://nomnel.net/blog/fjord-day52/">ブロック機能のバグ修正</a>の話. ブロックしたユーザが非表示にならず, 再度ブロックするとDBのユニーク制約に違反してエラーになるのが原因だった.<!-- more --></p>

<p>なのでブロック済みユーザのコメントは取得しないようにしようと試みる. 怖話では, 怖い話(Story), 怖い画像(Wallpaper), 怖い漫画(Comic)のそれぞれにコメントを付けることが出来(acts_as_commentable), ブロックは投稿したユーザからコメントしたユーザへの一方向になっている. また, 管理者以外のユーザがブロック済みユーザのコメントを見ることは無いはずなのでCommentクラスのdefault_scopeに</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">default_scope</span> <span class="o">-&gt;</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">joins</span><span class="p">(</span><span class="s1">&#39;left join stories    on comments.commentable_type = &quot;Story&quot;     and comments.commentable_id = stories.id &#39;</span><span class="p">)</span><span class="o">.</span>
</span><span class='line'>  <span class="n">joins</span><span class="p">(</span><span class="s1">&#39;left join wallpapers on comments.commentable_type = &quot;Wallpaper&quot; and comments.commentable_id = wallpapers.id &#39;</span><span class="p">)</span><span class="o">.</span>
</span><span class='line'>  <span class="n">joins</span><span class="p">(</span><span class="s1">&#39;left join comics     on comments.commentable_type = &quot;Comic&quot;     and comments.commentable_id = comics.id &#39;</span><span class="p">)</span><span class="o">.</span>
</span><span class='line'>  <span class="n">where</span><span class="p">(</span><span class="s1">&#39;comments.user_id not in (select blocks.destination_id from blocks where blocks.source_id =</span>
</span><span class='line'><span class="s1">    (case when comments.commentable_type = &quot;Story&quot;     then stories.user_id</span>
</span><span class='line'><span class="s1">          when comments.commentable_type = &quot;Wallpaper&quot; then wallpapers.user_id</span>
</span><span class='line'><span class="s1">          else                                              comics.user_id end))&#39;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>と書いた.</p>

<p>これで&#8221;ブロック済みユーザのコメントは取得しない&#8221;という目的は達成されるのだが, 今度は<code>includes(:commentable)</code>とすると<code>ActiveRecord::EagerLoadPolymorphicError - Can not eagerly load the polymorphic association :commentable</code>となってしまう.</p>

<p>回避する方法は分からなかったのだが, 現状<code>includes(:commentable)</code>が必要になる箇所はトップページ(/), コメント一覧ページ(/comments), 怖い漫画のトップページ(/comics)であり, 特にトップページは表示回数が多いはずなのでRailsやその他のキャッシュで対処出来ないかな…という淡い期待でそのままにした.</p>

<p>何か他にいい方法無いかな…</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails4でturbolinksを使わない]]></title>
    <link href="http://nomnel.net/blog/rails4-no-turbolinks/"/>
    <updated>2013-05-29T15:04:00+09:00</updated>
    <id>http://nomnel.net/blog/rails4-no-turbolinks</id>
    <content type="html"><![CDATA[<p><code>rails new</code>するときにturbolinksがbundlerでインストールされるので, 嫌なら<code>--skip-bundle</code>オプションを付けて作成する.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>bundle <span class="nb">exec </span>rails new APPNAME --skip-bundle
</span></code></pre></td></tr></table></div></figure>


<p>でまず, <code>Gemfile</code>から</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="s1">&#39;turbolinks&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>の行をコメントアウト.</p>

<p>次に<code>app/assets/javascripts/application.js</code>で</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">//= require turbolinks</span>
</span></code></pre></td></tr></table></div></figure>


<p>の行を削除.</p>

<p>最後に<code>app/views/layouts/application.html.erb</code>で</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='erb'><span class='line'><span class="cp">&lt;%=</span> <span class="n">stylesheet_link_tag</span>    <span class="s2">&quot;application&quot;</span><span class="p">,</span> <span class="ss">media</span><span class="p">:</span> <span class="s2">&quot;all&quot;</span><span class="p">,</span> <span class="s2">&quot;data-turbolinks-track&quot;</span> <span class="o">=&gt;</span> <span class="kp">true</span> <span class="cp">%&gt;</span><span class="x"></span>
</span><span class='line'><span class="cp">&lt;%=</span> <span class="n">javascript_include_tag</span> <span class="s2">&quot;application&quot;</span><span class="p">,</span> <span class="s2">&quot;data-turbolinks-track&quot;</span> <span class="o">=&gt;</span> <span class="kp">true</span> <span class="cp">%&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<p>となっている箇所を</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='erb'><span class='line'><span class="cp">&lt;%=</span> <span class="n">stylesheet_link_tag</span>    <span class="s2">&quot;application&quot;</span><span class="p">,</span> <span class="ss">media</span><span class="p">:</span> <span class="s2">&quot;all&quot;</span> <span class="cp">%&gt;</span><span class="x"></span>
</span><span class='line'><span class="cp">&lt;%=</span> <span class="n">javascript_include_tag</span> <span class="s2">&quot;application&quot;</span> <span class="cp">%&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<p>に変更.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[インターン52日目]]></title>
    <link href="http://nomnel.net/blog/fjord-day52/"/>
    <updated>2013-05-23T17:00:00+09:00</updated>
    <id>http://nomnel.net/blog/fjord-day52</id>
    <content type="html"><![CDATA[<p>さて今日は</p>

<ol>
<li>背景画像切り替えが出来なくなっている原因の調査</li>
<li>ランキング入りの怖話が削除されるとトップページ、ランキングページが表示できなくなるバグ修正</li>
<li>Twitter Cardsの申請のために各ページにog:titleを追加</li>
<li>ブロック機能のバグ修正 (途中)</li>
</ol>


<p>をしていた. <!-- more --></p>

<p>1は前回&#8221;怖話中で指定の画像が無い場合に背景がなくなる&#8221;の対策をした際に</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='coffeescript'><span class='line'><span class="nx">$</span><span class="p">.</span><span class="nx">ajax</span>
</span><span class='line'>  <span class="nv">type: </span><span class="s">&#39;get&#39;</span>
</span><span class='line'>  <span class="nv">url: </span><span class="s">&#39;画像のURL&#39;</span>
</span><span class='line'>  <span class="nv">success: </span><span class="nf">-&gt;</span>
</span><span class='line'>    <span class="err">そのまま表示</span>
</span><span class='line'>  <span class="nv">error: </span><span class="nf">-&gt;</span>
</span><span class='line'>    <span class="err">デフォルト画像を表示</span>
</span></code></pre></td></tr></table></div></figure>


<p>のようにやっていたがために<code>Same Origin Policy</code>に違反するようになってしまったことが原因(本番環境では画像は<code>cdn.kowabana.jp</code>という別ドメインにある). Access-Control-Allow-Origin ヘッダーというのを<code>cdn.kowabana.jp</code>側に追加してやればいいらしいけどどうやるんだろ.</p>

<p>2はそもそも怖話が削除されたときにランキングからも削除されなければいけない(はず)なので, StoryモデルからRankingモデルに<code>dependent: :destroy</code>を追加.</p>

<p>3は<code>app/views/layouts/application.html.haml</code>にメタタグを追加するだけ(各ページのタイトルを生成する関数はすでにあったので).</p>

<p>4はコメントしたユーザを指定してブロック出来る機能なのだけれど, ブロックしたはずのユーザのコメントも表示されているというもの(もう一度ブロックするとユニーク制約によりエラー). 怖い話, 画像, 漫画の全てにコメントをつけることが出来る仕様なので, それぞれで場合分けをしてブロックされたユーザのコメントは取得しないようにしたい. 具体的には</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">select</span> <span class="n">comments</span><span class="p">.</span><span class="o">*</span> <span class="k">from</span> <span class="n">comments</span>
</span><span class='line'><span class="k">left</span> <span class="k">join</span> <span class="n">stories</span>    <span class="k">on</span> <span class="n">comments</span><span class="p">.</span><span class="n">commentable_type</span> <span class="o">=</span> <span class="s1">&#39;Story&#39;</span>     <span class="k">and</span> <span class="n">comments</span><span class="p">.</span><span class="n">commentable_id</span> <span class="o">=</span> <span class="n">stories</span><span class="p">.</span><span class="n">id</span>
</span><span class='line'><span class="k">left</span> <span class="k">join</span> <span class="n">wallpapers</span> <span class="k">on</span> <span class="n">comments</span><span class="p">.</span><span class="n">commentable_type</span> <span class="o">=</span> <span class="s1">&#39;Wallpaper&#39;</span> <span class="k">and</span> <span class="n">comments</span><span class="p">.</span><span class="n">commentable_id</span> <span class="o">=</span> <span class="n">wallpapers</span><span class="p">.</span><span class="n">id</span>
</span><span class='line'><span class="k">left</span> <span class="k">join</span> <span class="n">comics</span>     <span class="k">on</span> <span class="n">comments</span><span class="p">.</span><span class="n">commentable_type</span> <span class="o">=</span> <span class="s1">&#39;Comic&#39;</span>     <span class="k">and</span> <span class="n">comments</span><span class="p">.</span><span class="n">commentable_id</span> <span class="o">=</span> <span class="n">comics</span><span class="p">.</span><span class="n">id</span>
</span><span class='line'><span class="k">where</span> <span class="n">comments</span><span class="p">.</span><span class="n">user_id</span> <span class="k">not</span> <span class="k">in</span> <span class="p">(</span><span class="k">select</span> <span class="n">blocks</span><span class="p">.</span><span class="n">destination_id</span> <span class="k">from</span> <span class="n">blocks</span> <span class="k">where</span> <span class="n">blocks</span><span class="p">.</span><span class="n">source_id</span> <span class="o">=</span>
</span><span class='line'><span class="p">(</span><span class="k">case</span> <span class="k">when</span> <span class="n">comments</span><span class="p">.</span><span class="n">commentable_type</span> <span class="o">=</span> <span class="s1">&#39;Story&#39;</span>     <span class="k">then</span> <span class="n">stories</span><span class="p">.</span><span class="n">user_id</span>
</span><span class='line'>      <span class="k">when</span> <span class="n">comments</span><span class="p">.</span><span class="n">commentable_type</span> <span class="o">=</span> <span class="s1">&#39;Wallpaper&#39;</span> <span class="k">then</span> <span class="n">wallpapers</span><span class="p">.</span><span class="n">user_id</span>
</span><span class='line'>      <span class="k">else</span>                                              <span class="n">comics</span><span class="p">.</span><span class="n">user_id</span> <span class="k">end</span><span class="p">))</span>
</span></code></pre></td></tr></table></div></figure>


<p>のようなSQLを発行できるようにしたい.</p>

<p>基本的にブロック済みのコメントは表示されないはずなので, とりあえずdefault_scopeに以下のように記述してみたのだが</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">default_scope</span> <span class="o">-&gt;</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">joins</span><span class="p">(</span><span class="s1">&#39;left join stories    on comments.commentable_type = &quot;Story&quot;     and comments.commentable_id = stories.id &#39;</span><span class="p">)</span><span class="o">.</span>
</span><span class='line'>  <span class="n">joins</span><span class="p">(</span><span class="s1">&#39;left join wallpapers on comments.commentable_type = &quot;Wallpaper&quot; and comments.commentable_id = wallpapers.id &#39;</span><span class="p">)</span><span class="o">.</span>
</span><span class='line'>  <span class="n">joins</span><span class="p">(</span><span class="s1">&#39;left join comics     on comments.commentable_type = &quot;Comic&quot;     and comments.commentable_id = comics.id &#39;</span><span class="p">)</span><span class="o">.</span>
</span><span class='line'>  <span class="n">where</span><span class="p">(</span><span class="s1">&#39;comments.user_id not in (select blocks.destination_id from blocks where blocks.source_id =</span>
</span><span class='line'><span class="s1">    (case when comments.commentable_type = &quot;Story&quot; then stories.user_id when comments.commentable_type = &quot;Wallpaper&quot; then wallpapers.user_id else comics.user_id end))&#39;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>Can not eagerly load the polymorphic association</code>と表示されて失敗. 一旦ここまで.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[インターン51日目(多分)]]></title>
    <link href="http://nomnel.net/blog/fjord-day51/"/>
    <updated>2013-05-20T17:00:00+09:00</updated>
    <id>http://nomnel.net/blog/fjord-day51</id>
    <content type="html"><![CDATA[<p>さて今日は</p>

<ol>
<li>怖話中で指定の画像が無い場合に背景がなくなる</li>
</ol>


<p>をやっていた. <!-- more --></p>

<p>2つ詰まったところがあって,</p>

<p>1つは配列の要素それぞれを使ってajax通信した後に通信結果を使って元の配列を変更したい場合, 例えば次のように書くと</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='coffeescript'><span class='line'><span class="nv">foos = </span><span class="p">[</span><span class="s">&#39;a&#39;</span><span class="p">,</span> <span class="s">&#39;b&#39;</span><span class="p">,</span> <span class="s">&#39;c&#39;</span><span class="p">]</span>
</span><span class='line'><span class="k">for</span> <span class="nx">foo</span><span class="p">,</span> <span class="nx">idx</span> <span class="k">in</span> <span class="nx">foos</span>
</span><span class='line'>  <span class="nx">$</span><span class="p">.</span><span class="nx">ajax</span>
</span><span class='line'>    <span class="nv">type: </span><span class="s">&#39;get&#39;</span>
</span><span class='line'>    <span class="nv">url: </span><span class="s">&#39;/bar&#39;</span>
</span><span class='line'>    <span class="nv">success: </span><span class="nf">-&gt;</span>
</span><span class='line'>      <span class="nx">foos</span><span class="p">[</span><span class="nx">idx</span><span class="p">]</span> <span class="o">=</span> <span class="nx">foo</span> <span class="o">+</span> <span class="s">&#39;baz&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>全てのsuccess呼び出し内で<code>idx = 2</code>, <code>foo = 'c'</code>となってしまうやつ. これは</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='coffeescript'><span class='line'><span class="nv">foos = </span><span class="p">[</span><span class="s">&#39;a&#39;</span><span class="p">,</span> <span class="s">&#39;b&#39;</span><span class="p">,</span> <span class="s">&#39;c&#39;</span><span class="p">]</span>
</span><span class='line'><span class="k">for</span> <span class="nx">foo</span><span class="p">,</span> <span class="nx">idx</span> <span class="k">in</span> <span class="nx">foos</span>
</span><span class='line'>  <span class="p">(</span><span class="nf">(foo, idx) -&gt;</span>
</span><span class='line'>    <span class="nx">$</span><span class="p">.</span><span class="nx">ajax</span>
</span><span class='line'>      <span class="nv">type: </span><span class="s">&#39;get&#39;</span>
</span><span class='line'>      <span class="nv">url: </span><span class="s">&#39;/bar&#39;</span>
</span><span class='line'>      <span class="nv">success: </span><span class="nf">-&gt;</span>
</span><span class='line'>        <span class="nx">foos</span><span class="p">[</span><span class="nx">idx</span><span class="p">]</span> <span class="o">=</span> <span class="nx">foo</span> <span class="o">+</span> <span class="s">&#39;baz&#39;</span>
</span><span class='line'>  <span class="p">)</span> <span class="nx">foo</span><span class="p">,</span> <span class="nx">idx</span>
</span></code></pre></td></tr></table></div></figure>


<p>みたいに予め適用しといてやるとよさげ.</p>

<p>もう1つは,</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='coffeescript'><span class='line'><span class="k">class</span> <span class="nx">Klass</span>
</span><span class='line'>  <span class="nv">prop: </span><span class="s">&#39;foo&#39;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nv">proc1: </span><span class="nf">-&gt;</span>
</span><span class='line'>    <span class="nv">pr2 = </span><span class="nx">@proc2</span>
</span><span class='line'>    <span class="nx">$</span><span class="p">.</span><span class="nx">ajax</span>
</span><span class='line'>      <span class="nv">type: </span><span class="s">&#39;get&#39;</span>
</span><span class='line'>      <span class="nv">url: </span><span class="s">&#39;/bar&#39;</span>
</span><span class='line'>      <span class="nv">success: </span><span class="nf">-&gt;</span>
</span><span class='line'>        <span class="nx">pr2</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>  <span class="nv">proc2: </span><span class="nf">-&gt;</span>
</span><span class='line'>    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span> <span class="nx">@prop</span>
</span></code></pre></td></tr></table></div></figure>


<p>ってやるとsuccessの中のpr2の中で@propがundefinedになるやつ. これは単純に</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='coffeescript'><span class='line'>  <span class="nv">proc2: </span><span class="o">=&gt;</span>
</span><span class='line'>    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span> <span class="nx">@prop</span>
</span></code></pre></td></tr></table></div></figure>


<p>と, fat arrow使えばおーけー, 多分.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Railsで初期化後に何か処理をしたいとき]]></title>
    <link href="http://nomnel.net/blog/rails-after-initialize/"/>
    <updated>2013-05-15T01:15:00+09:00</updated>
    <id>http://nomnel.net/blog/rails-after-initialize</id>
    <content type="html"><![CDATA[<p><code>config/application.rb</code>などで</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="n">config</span><span class="o">.</span><span class="n">after_initialize</span> <span class="k">do</span>
</span><span class='line'>  <span class="c1"># ここに処理を記述</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>とすればよい.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RailsでRspecとHamlとSass使いたいとき]]></title>
    <link href="http://nomnel.net/blog/rspec-haml-sass-on-rails/"/>
    <updated>2013-05-14T00:30:00+09:00</updated>
    <id>http://nomnel.net/blog/rspec-haml-sass-on-rails</id>
    <content type="html"><![CDATA[<p>よく忘れるのでメモしておく.</p>

<!-- more -->


<p><code>Gemfile</code>に以下を追加(sass-railsは標準で入ってるはず).</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="n">gem</span> <span class="s1">&#39;rspec-rails&#39;</span>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;haml-rails&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>括弧とかセミコロン書きたくないので.scssではなく.sassが生成されるようにする. <code>config/application.rb</code>で次のように指定.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="k">module</span> <span class="nn">APPNAME</span>
</span><span class='line'>  <span class="k">class</span> <span class="nc">Application</span> <span class="o">&lt;</span> <span class="ss">Rails</span><span class="p">:</span><span class="ss">:Application</span>
</span><span class='line'>    <span class="p">{</span> <span class="err">なんか色々</span> <span class="p">}</span>
</span><span class='line'>    <span class="n">config</span><span class="o">.</span><span class="n">sass</span><span class="o">.</span><span class="n">preferred_syntax</span> <span class="o">=</span> <span class="ss">:sass</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>これで<code>bundle install</code>すればよい.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>bundle install --path vendor/bundle
</span></code></pre></td></tr></table></div></figure>


<p>終わったらspecフォルダなどを生成しておく.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>rails g rspec:install
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[インターン46日目]]></title>
    <link href="http://nomnel.net/blog/fjord-day46/"/>
    <updated>2013-05-10T17:00:00+09:00</updated>
    <id>http://nomnel.net/blog/fjord-day46</id>
    <content type="html"><![CDATA[<p>さて今日は,</p>

<ol>
<li>作業途中に気になった細かいもの3つ</li>
<li>特選の怖い話を管理画面から編集できるようにする (途中)</li>
</ol>


<p>をしていた.</p>

<!-- more -->


<p>細かいものというのは以下.</p>

<ol>
<li><code>rake db:migrate</code>すると<code>db/schema.rb</code>が変更される(not nullの追加)
 -> 変更漏れっぽいので適用</li>
<li>先日&#8221;Google Analyticsの結果をLingrに通知&#8221;に取り組んだ際, client_idなどをベタ書きしていた
 -> <code>config/settings/production.yml</code>などに移動</li>
<li>管理者用の怖い話一覧画面で(多分)投稿者名を表示するところが<code>#&lt;User:0000000000&gt;</code>みたいになっていた
 -> 投稿者名を表示するように修正</li>
</ol>


<p>特選の怖い話を管理画面から編集できるようにするタスクの方針は</p>

<ol>
<li>特選の怖い話を上述の<code>config/settings/*.yml</code>で管理していたのを怖い話テーブルに移動</li>
<li>既存のcontrollerを修正</li>
<li>管理者用の特選編集画面を追加</li>
<li>特選から除外できるように</li>
<li>特選に追加できるように</li>
</ol>


<p>といったところで今は4に取り組んでいるところ. 除外と追加は一画面で遷移無しに出来るようにしたいなー.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[インターン43日目]]></title>
    <link href="http://nomnel.net/blog/fjord-day43/"/>
    <updated>2013-05-07T17:30:00+09:00</updated>
    <id>http://nomnel.net/blog/fjord-day43</id>
    <content type="html"><![CDATA[<p>さて今日は、</p>

<ol>
<li>怖話投稿時のタグをフォーム10個に分ける</li>
<li>Googleアナリティクスの結果をLingrで知りたい (途中)</li>
</ol>


<p>をしていた.</p>

<!-- more -->


<p>1は実装(と言っても3行だが)のみでデザインは町田さんにお願いした.</p>

<p>2はrunnerのタスクとしてcronで定時に実行する方針. 明日には終わらせたい.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JenkinsにOctopressのデプロイを任せる]]></title>
    <link href="http://nomnel.net/blog/jenkins-deploys-octopress/"/>
    <updated>2013-05-04T20:00:00+09:00</updated>
    <id>http://nomnel.net/blog/jenkins-deploys-octopress</id>
    <content type="html"><![CDATA[<p>BitbucketにOctopressのsourceブランチを置き, pushしたらJenkinsがGithub pageにデプロイするようにする.</p>

<h3>目次</h3>

<ol>
<li>環境</li>
<li>公開鍵認証用の鍵の生成と登録</li>
<li>プラグインのインストール</li>
<li>ジョブを作成</li>
<li>確認</li>
</ol>


<p>なお,</p>

<ul>
<li>Jenkinsのインストールは<a href="http://nomnel.net/blog/install-jenkins/">こちら</a></li>
<li>Octopressインストールは<a href="http://nomnel.net/blog/wordpress-to-octopress/">こちら</a></li>
</ul>


<p>を参照.</p>

<h3>環境</h3>

<ul>
<li>CentOS release 6.4 (Final)</li>
</ul>


<!-- more -->


<h3>公開鍵認証用の鍵の生成と登録</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nb">cd</span> /var/lib/jenkins
</span><span class='line'>sudo -u jenkins -H ssh-keygen -t rsa
</span></code></pre></td></tr></table></div></figure>


<p>パスフレーズは設定しない. 出来た公開鍵(<code>/var/lib/jenkins/.ssh/id_rsa.pub</code>)の中身をBitbucketとGithubに登録しておく.</p>

<p>また, BitbucketとGithubに接続してknown hostsに加えておく.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sudo -u jenkins git ls-remote -h git@github.com:user/repo.git HEAD
</span><span class='line'>sudo -u jenkins git ls-remote -h git@bitbucket.org:user/repo.git HEAD
</span></code></pre></td></tr></table></div></figure>


<h3>プラグインのインストール</h3>

<p>Manage Jenkins > Manage Plugins > Availableと進み, Git pluginとrbenv pluginにチェックを入れてInstall without restartをクリック.</p>

<h3>ジョブを作成</h3>

<ol>
<li>トップページでNew Jobをクリック</li>
<li>Job nameを記入し, Build a free-style software projectを選択してOKをクリック</li>
</ol>


<p>これで新しいジョブが作成される. 詳細設定は以下のようにする.</p>

<ol>
<li>Source Code Management: Git</li>
<li>Repository URL: <code>git@bitbucket.org:user/repo.git</code></li>
<li>Branches to build: <code>source</code></li>
<li>Build Triggers: Poll SCM (Scheduleは空白)</li>
<li>Build Environment: Rbenv build wrapperにチェック

<ul>
<li>Version: 1.9.3-p194</li>
<li>Preinstall gem list: bundler,rake</li>
</ul>
</li>
<li>Build > Add build step > Execute shell

<ul>
<li>Command: 下に記載</li>
</ul>
</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nb">export </span><span class="nv">PATH</span><span class="o">=</span><span class="s2">&quot;/var/lib/jenkins/.rbenv/bin:$PATH&quot;</span>
</span><span class='line'><span class="nb">eval</span> <span class="s2">&quot;$(rbenv init -)&quot;</span>
</span><span class='line'>rbenv <span class="nb">exec </span>bundle install --path vendor/bundle
</span><span class='line'>rbenv <span class="nb">exec </span>bundle <span class="nb">exec </span>rake setup_github_pages<span class="se">\[</span>git@github.com:nomnel/nomnel.github.io.git<span class="se">\]</span>
</span><span class='line'>rbenv <span class="nb">exec </span>bundle <span class="nb">exec </span>rake gen_deploy
</span></code></pre></td></tr></table></div></figure>


<p>2回目以降は<code>setup_github_pages</code>の行は必要ないので消してもよい.</p>

<h3>トリガの登録</h3>

<p>参考: <a href="http://kohsuke.org/2011/12/01/polling-must-die-triggering-jenkins-builds-from-a-git-hook/">Kohsuke Kawaguchi » Polling must die: triggering Jenkins builds from a git hook</a></p>

<p>BitbucketのリポジトリのServicesでPOSTを追加. URLは<code>http://your.domain/jenkins/git/notifyCommit?url=git@bitbucket.org:user/repo.git</code>のようにする.</p>

<p>ブラウザ等で実際にURLにアクセスしてみてJobが実行されればOK.</p>

<p>これでBitbucketにpushするとJenkinsに通知が行って, Github pageにデプロイしてくれるようになった.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CentOSでsystem wideなrbenv+ruby-build環境を構築する]]></title>
    <link href="http://nomnel.net/blog/centos-system-wide-rbenv-and-ruby-build/"/>
    <updated>2013-05-04T12:00:00+09:00</updated>
    <id>http://nomnel.net/blog/centos-system-wide-rbenv-and-ruby-build</id>
    <content type="html"><![CDATA[<h3>目次</h3>

<ol>
<li>環境</li>
<li>rbenv, ruby-buildのインストール</li>
<li>rubyのインストール</li>
<li>参考</li>
</ol>


<h3>環境</h3>

<ul>
<li>CentOS release 6.4 (Final)</li>
</ul>


<!-- more -->


<h3>rbenv, ruby-buildのインストール</h3>

<p>sudo地獄なのでrootで作業を行う.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>su
</span><span class='line'>
</span><span class='line'><span class="c"># 以下root</span>
</span><span class='line'><span class="nb">cd</span> /usr/local
</span><span class='line'>git clone git://github.com/sstephenson/rbenv.git rbenv
</span><span class='line'>mkdir rbenv/shims rbenv/versions
</span><span class='line'>groupadd rbenv
</span><span class='line'>chgrp -R rbenv rbenv
</span><span class='line'>chmod -R g+rwxXs rbenv
</span><span class='line'>git clone git://github.com/sstephenson/ruby-build.git ruby-build
</span><span class='line'><span class="nb">cd </span>ruby-build
</span><span class='line'>./install.sh
</span></code></pre></td></tr></table></div></figure>


<p>として, <code>/etc/profile.d/rbenv.sh</code>に</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nb">export </span><span class="nv">RBENV_ROOT</span><span class="o">=</span><span class="s2">&quot;/usr/local/rbenv&quot;</span>
</span><span class='line'><span class="nb">export </span><span class="nv">PATH</span><span class="o">=</span><span class="s2">&quot;/usr/local/rbenv/bin:$PATH&quot;</span>
</span><span class='line'><span class="nb">eval</span> <span class="s2">&quot;$(rbenv init -)&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>と記述.</p>

<h3>rubyのインストール</h3>

<p>先に依存パッケージをyumでインストールしておく.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>yum install --enablerepo<span class="o">=</span>epel make gcc zlib-devel openssl-devel readline-devel ncurses-devel gdbm-devel db4-devel libffi-devel tk-devel libyaml-devel
</span></code></pre></td></tr></table></div></figure>


<p>後は</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>rbenv install --list <span class="c"># インストールできるRubyの一覧を表示</span>
</span><span class='line'>rbenv install 2.0.0-p0
</span><span class='line'>rbenv global 2.0.0-p0
</span></code></pre></td></tr></table></div></figure>


<p>などとすればよい. このときrootであることに注意(一般ユーザで<code>sudo rbenv install 2.0.0-p0</code>とすると<code>/root/.rbenv/</code>下にインストールされ共有できない).</p>

<h3>参考</h3>

<ul>
<li><a href="http://blog.kyanny.me/entry/2012/02/03/155652">rbenv + ruby-build を system-wide にインストールする - @kyanny&#8217;s blog</a></li>
<li><a href="http://qiita.com/items/c2377c45d6c4fbfd775f">CentOS 6.3にシステムワイドなrbenv+ruby-buildの環境を構築する手順 #Ruby - Qiita</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[sudo時にPATHを引き継ぐ]]></title>
    <link href="http://nomnel.net/blog/centos-take-over-path-from-user-on-sudo/"/>
    <updated>2013-05-04T11:50:00+09:00</updated>
    <id>http://nomnel.net/blog/centos-take-over-path-from-user-on-sudo</id>
    <content type="html"><![CDATA[<h3>環境</h3>

<ul>
<li>CentOS release 6.4 (Final)</li>
</ul>


<!-- more -->


<h3>方法</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sudo visudo
</span></code></pre></td></tr></table></div></figure>


<p>として以下の行を探し,</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>Defaults    env_reset
</span><span class='line'>Defaults    <span class="nv">env_keep</span> <span class="o">=</span>  <span class="s2">&quot;COLORS DISPLAY HOSTNAME HISTSIZE INPUTRC KDEDIR LS_COLORS&quot;</span>
</span><span class='line'>Defaults    env_keep +<span class="o">=</span> <span class="s2">&quot;MAIL PS1 PS2 QTDIR USERNAME LANG LC_ADDRESS LC_CTYPE&quot;</span>
</span><span class='line'>Defaults    env_keep +<span class="o">=</span> <span class="s2">&quot;LC_COLLATE LC_IDENTIFICATION LC_MEASUREMENT LC_MESSAGES&quot;</span>
</span><span class='line'>Defaults    env_keep +<span class="o">=</span> <span class="s2">&quot;LC_MONETARY LC_NAME LC_NUMERIC LC_PAPER LC_TELEPHONE&quot;</span>
</span><span class='line'>Defaults    env_keep +<span class="o">=</span> <span class="s2">&quot;LC_TIME LC_ALL LANGUAGE LINGUAS _XKB_CHARSET XAUTHORITY&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>次の行を追加.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>Defaults    env_keep +<span class="o">=</span> <span class="s2">&quot;PATH&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>また, <code>secure_path</code>の行を次のようにコメントアウトする.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># Defaults    secure_path = /sbin:/bin:/usr/sbin:/usr/bin</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[インターン42日目]]></title>
    <link href="http://nomnel.net/blog/fjord-day42/"/>
    <updated>2013-05-02T17:20:00+09:00</updated>
    <id>http://nomnel.net/blog/fjord-day42</id>
    <content type="html"><![CDATA[<p>さて今日は,</p>

<ol>
<li><a href="http://nomnel.net/blog/install-nginx-in-centos6-using-yum/">CentOS6で最新版のnginxをyumでインストールする</a></li>
<li><a href="http://nomnel.net/blog/install-jenkins/">Jenkins氏をさくらVPSに招聘する</a></li>
</ol>


<p>をした. Jenkinsを入れたのは, せっかくwebサービスを作るなら継続的インテグレーションも経験したいと思ったからだ.</p>

<!-- more -->


<p>http://domain.com/jenkins としてアクセスするためには, Jenkins側でもprefixを指定しなければいけないことに気づかず手間取ったが, nginxでリバースプロキシを使う方法も分かったし良い勉強になった.</p>

<p>とりあえずJenkins氏には, このブログのデプロイを任せてみようと思う.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Jenkins氏をさくらVPSに招聘する]]></title>
    <link href="http://nomnel.net/blog/install-jenkins/"/>
    <updated>2013-05-02T17:00:00+09:00</updated>
    <id>http://nomnel.net/blog/install-jenkins</id>
    <content type="html"><![CDATA[<h3>目次</h3>

<ol>
<li>環境</li>
<li>Javaのインストール</li>
<li>Jenkinsのインストール</li>
<li>nginx経由でJenkinsにアクセスする</li>
<li>Jenkinsへのアクセス制限</li>
</ol>


<!-- more -->


<h3>環境</h3>

<p>CentOS 6.4 64bit</p>

<h3>Javaのインストール</h3>

<p>(参照: 公式サイトの<a href="https://wiki.jenkins-ci.org/display/JENKINS/Installing+Jenkins">Installing Jenkins</a>)</p>

<p>Jenkins氏は職場環境としてJavaを要求している. しかも <strong>Sun-compatible</strong> なJavaを.</p>

<p>なので, まずはJavaがインストールされているかチェック.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>java -version
</span></code></pre></td></tr></table></div></figure>


<p>僕の場合はインストールされていなかったが, もし</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>java version <span class="s2">&quot;1.5.0&quot;</span>
</span><span class='line'>gij <span class="o">(</span>GNU libgcj<span class="o">)</span> version 4.4.6 20110731 <span class="o">(</span>Red Hat 4.4.6-3<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>のように表示された場合は, Jenkins氏好みのJavaではないので</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sudo yum remove java
</span></code></pre></td></tr></table></div></figure>


<p>してからインストールし直す. インストールされていなかった場合はここから.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sudo yum search openjdk <span class="c">#バージョンチェック</span>
</span><span class='line'>
</span><span class='line'>sudo yum install java-1.7.0-openjdk <span class="c"># インストール</span>
</span></code></pre></td></tr></table></div></figure>


<p>確認</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>java -version
</span><span class='line'>
</span><span class='line'><span class="c"># 出力結果</span>
</span><span class='line'>java version <span class="s2">&quot;1.7.0_19&quot;</span>
</span><span class='line'>OpenJDK Runtime Environment <span class="o">(</span>rhel-2.3.9.1.el6_4-x86_64<span class="o">)</span>
</span><span class='line'>OpenJDK 64-Bit Server VM <span class="o">(</span>build 23.7-b01, mixed mode<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Jenkinsのインストール</h3>

<p>(参照: 公式サイトの<a href="https://wiki.jenkins-ci.org/display/JENKINS/Installing+Jenkins">Installing Jenkins</a>)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># リポジトリを登録</span>
</span><span class='line'>sudo wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat/jenkins.repo
</span><span class='line'>
</span><span class='line'><span class="c"># 鍵を登録</span>
</span><span class='line'>sudo rpm --import http://pkg.jenkins-ci.org/redhat-stable/jenkins-ci.org.key
</span><span class='line'>
</span><span class='line'><span class="c"># インストール</span>
</span><span class='line'>sudo yum install jenkins
</span></code></pre></td></tr></table></div></figure>


<p>で, 出勤してもらう. 以後は住み込みで.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sudo service jenkins start <span class="c"># 起動</span>
</span><span class='line'>sudo chkconfig jenkins on  <span class="c"># 自動起動の設定</span>
</span></code></pre></td></tr></table></div></figure>


<p>Jenkins氏はデフォルトで8080番ポートで待機しているので, 素直に8080番を開ける(参考: <a href="http://nomnel.net/blog/iptables-filter/">iptablesでパケットフィルタリングするための設定</a>)か, nginx経由でアクセス出来るように設定する.</p>

<h3>nginx経由でJenkinsにアクセスする</h3>

<p>nginxのインストールは<a href="http://nomnel.net/blog/install-nginx-in-centos6-using-yum/">こちら</a>を参照.</p>

<h4>http://jenkins.yourdomain.comでアクセスしたい場合</h4>

<p><code>/etc/nginx/conf.d/jenkins.conf</code>に</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>server <span class="o">{</span>
</span><span class='line'>    listen 80;
</span><span class='line'>    server_name jenkins.yourdomain.com;
</span><span class='line'>    location / <span class="o">{</span>
</span><span class='line'>        proxy_pass http://localhost:8080;
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>と記述し,</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sudo service nginx restart
</span></code></pre></td></tr></table></div></figure>


<p>でnginxを再起動して反映.</p>

<h4>http://yourdomain.com/jenkinsでアクセスしたい場合</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>server <span class="o">{</span>
</span><span class='line'>    listen 80;
</span><span class='line'>    server_name yourdomain.com;
</span><span class='line'>    location /jenkins <span class="o">{</span>
</span><span class='line'>        proxy_pass http://localhost:8080;
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>とし, <code>/etc/sysconfig/jenkins</code>を以下のように修正する(prefixを認識させておく)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c">#修正前</span>
</span><span class='line'><span class="nv">JENKINS_ARGS</span><span class="o">=</span><span class="s2">&quot;&quot;</span>
</span><span class='line'><span class="c">#修正後</span>
</span><span class='line'><span class="nv">JENKINS_ARGS</span><span class="o">=</span><span class="s2">&quot;--prefix=/jenkins --httpPort=${JENKINS_PORT} --ajp13Port=${JENKINS_AJP_PORT}&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>終わったら</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sudo service nginx restart
</span><span class='line'>sudo service jenkins restart
</span></code></pre></td></tr></table></div></figure>


<p>でnginxとJenkinsを再起動して反映.</p>

<h3>Jenkinsへのアクセス制限</h3>

<p>このままだと誰でも何でも出来てしまうので, <a href="https://wiki.jenkins-ci.org/display/JA/Standard+Security+Setup">Standard Security Setup - 日本語 - Jenkins Wiki</a>を参照してアクセス制限をかけておく.</p>

<ol>
<li>トップからManage Jenkins > Configure Global Securityと進んで,</li>
<li>Enable securityにチェック</li>
<li>Security Realm > Jenkins&#8217;s own user database > Allow users to sign upにチェック</li>
<li>Authorization > Matrix-based securityにチェックを入れて</li>
<li>User/group to add: に管理者ユーザ名を入力してAddをクリック</li>
<li>追加した管理者ユーザは全てチェックを入れて, Anonymousのチェックを全て外す</li>
<li>Saveをクリック</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CentOS6で最新版のnginxをyumでインストールする]]></title>
    <link href="http://nomnel.net/blog/install-nginx-in-centos6-using-yum/"/>
    <updated>2013-05-02T12:20:00+09:00</updated>
    <id>http://nomnel.net/blog/install-nginx-in-centos6-using-yum</id>
    <content type="html"><![CDATA[<p><a href="http://nomnel.net/blog/install-nginx-in-debian-using-apt-get/">Debianのとき</a>と同様, 標準のままではパッケージシステムで最新版をインストールすることが出来ないのでその対策.</p>

<!-- more -->


<p>リポジトリを登録する. (URLは<a href="http://nginx.org/en/linux_packages.html#stable">公式のページ</a>を参照)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sudo rpm -ivh http://nginx.org/packages/centos/6/noarch/RPMS/nginx-release-centos-6-0.el6.ngx.noarch.rpm
</span></code></pre></td></tr></table></div></figure>


<p>すると<code>/etc/yum.repos.d/nginx.repo</code>が以下のようになる.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># nginx.repo</span>
</span><span class='line'>
</span><span class='line'><span class="o">[</span>nginx<span class="o">]</span>
</span><span class='line'><span class="nv">name</span><span class="o">=</span>nginx repo
</span><span class='line'><span class="nv">baseurl</span><span class="o">=</span>http://nginx.org/packages/centos/6/<span class="nv">$basearch</span>/
</span><span class='line'><span class="nv">gpgcheck</span><span class="o">=</span>0
</span><span class='line'><span class="nv">enabled</span><span class="o">=</span>1
</span></code></pre></td></tr></table></div></figure>


<p>後は普通にyumでインストールすると最新版が入る.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sudo yum install -y nginx
</span></code></pre></td></tr></table></div></figure>


<p>起動する(Apache等が動いていたら先に止めておく)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sudo service nginx start
</span></code></pre></td></tr></table></div></figure>


<p>ブラウザでアクセスして<code>Welcome to nginx!</code>と表示されたら成功.</p>

<p>ちなみにドキュメントルートは<code>/usr/share/nginx/html/</code>.</p>

<h3>参考</h3>

<p><a href="http://heartbeats.jp/hbblog/2012/02/nginx02.html">nginx連載2回目: nginxのインストール</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[WordPressのアンインストール]]></title>
    <link href="http://nomnel.net/blog/uninstall-wordpress/"/>
    <updated>2013-05-02T11:45:00+09:00</updated>
    <id>http://nomnel.net/blog/uninstall-wordpress</id>
    <content type="html"><![CDATA[<p><a href="http://nomnel.net/blog/install-wordpress/">blogとしてインストールしていた場合</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sudo rm -rf /var/www/html/blog
</span><span class='line'>
</span><span class='line'><span class="c"># mysqlにログイン</span>
</span><span class='line'>mysql -u root -p
</span><span class='line'>
</span><span class='line'><span class="c"># データベースを削除</span>
</span><span class='line'>mysql&gt; drop databases wordpress;
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CentOSのバージョンとアーキテクチャの確認]]></title>
    <link href="http://nomnel.net/blog/confirm-centos-version/"/>
    <updated>2013-05-02T11:40:00+09:00</updated>
    <id>http://nomnel.net/blog/confirm-centos-version</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># バージョン確認</span>
</span><span class='line'>cat /etc/redhat-release
</span><span class='line'><span class="c"># =&gt; CentOS release 6.4 (Final)</span>
</span><span class='line'>
</span><span class='line'><span class="c"># OSが64bitか32bitか</span>
</span><span class='line'>arch
</span><span class='line'><span class="c"># =&gt; x86_64</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[インターン41日目]]></title>
    <link href="http://nomnel.net/blog/fjord-day41/"/>
    <updated>2013-05-01T23:30:00+09:00</updated>
    <id>http://nomnel.net/blog/fjord-day41</id>
    <content type="html"><![CDATA[<p>(40日目は省略されました)</p>

<p>さて, 大方のプラクティスを終えたこともあり, 今日から</p>

<ol>
<li><a href="http://256interns.com/practices/75">webアプリ, サービスを作る</a></li>
</ol>


<p>というプラクティスを始めることになった. これがFjordでのインターン総まとめになると思う.</p>

<!-- more -->


<p>そもそもインターンを始めたのはプログラマとして就職するための準備だった(あわよくば紹介してもらうことも含めて). で, 準備というのは</p>

<ul>
<li>プログラマとして必要な知識を得る</li>
<li>いまどきなプルリクベースの開発を経験する</li>
<li>稼働中なサービスの改良を経験する</li>
</ul>


<p>の上で</p>

<ul>
<li>小規模サービスなら1人で構築, 運営できるようになる</li>
</ul>


<p>ことだと考えた. なのでこのプラクティスを完了したときには最初の目標を達成したことになる(サービスの運営は除く).</p>

<p>本音を言うと就活するのは怖いのだが, いつまでもインターンを続けるわけにもいかないし, いい頃合いだとして納得できるものを作って終えたい.</p>

<p>※ 作ったものが残念だったらまた別のを作るので延びるかもしれん</p>
]]></content>
  </entry>
  
</feed>
