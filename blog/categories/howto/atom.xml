<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: howto | 飲んだり寝たり]]></title>
  <link href="http://nomnel.github.io/blog/categories/howto/atom.xml" rel="self"/>
  <link href="http://nomnel.github.io/"/>
  <updated>2013-05-04T17:31:18+09:00</updated>
  <id>http://nomnel.github.io/</id>
  <author>
    <name><![CDATA[nomnel]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[CentOSでsystem wideなrbenv+ruby-build環境を構築する]]></title>
    <link href="http://nomnel.github.io/blog/centos-system-wide-rbenv-and-ruby-build/"/>
    <updated>2013-05-04T12:00:00+09:00</updated>
    <id>http://nomnel.github.io/blog/centos-system-wide-rbenv-and-ruby-build</id>
    <content type="html"><![CDATA[<h3>目次</h3>

<ol>
<li>環境</li>
<li>rbenv, ruby-buildのインストール</li>
<li>rubyのインストール</li>
<li>参考</li>
</ol>


<h3>環境</h3>

<ul>
<li>CentOS release 6.4 (Final)</li>
</ul>


<!-- more -->


<h3>rbenv, ruby-buildのインストール</h3>

<p>sudo地獄なのでrootで作業を行う.</p>

<p>```sh
su</p>

<h1>以下root</h1>

<p>cd /usr/local
git clone git://github.com/sstephenson/rbenv.git rbenv
mkdir rbenv/shims rbenv/versions
groupadd rbenv
chgrp -R rbenv rbenv
chmod -R g+rwxXs rbenv
git clone git://github.com/sstephenson/ruby-build.git ruby-build
cd ruby-build
./install.sh
```</p>

<p>として, <code>/etc/profile.d/rbenv.sh</code>に</p>

<p><code>sh
export RBENV_ROOT="/usr/local/rbenv"
export PATH="/usr/local/rbenv/bin:$PATH"
eval "$(rbenv init -)"
</code></p>

<p>と記述.</p>

<h3>rubyのインストール</h3>

<p>先に依存パッケージをyumでインストールしておく.</p>

<p><code>sh
yum install --enablerepo=epel make gcc zlib-devel openssl-devel readline-devel ncurses-devel gdbm-devel db4-devel libffi-devel tk-devel libyaml-devel
</code></p>

<p>後は</p>

<p><code>sh
rbenv install --list # インストールできるRubyの一覧を表示
rbenv install 2.0.0-p0
rbenv global 2.0.0-p0
</code></p>

<p>などとすればよい. このときrootであることに注意(一般ユーザで<code>sudo rbenv install 2.0.0-p0</code>とすると<code>/root/.rbenv/</code>下にインストールされ共有できない).</p>

<h3>参考</h3>

<ul>
<li><a href="http://blog.kyanny.me/entry/2012/02/03/155652">rbenv + ruby-build を system-wide にインストールする - @kyanny's blog</a></li>
<li><a href="http://qiita.com/items/c2377c45d6c4fbfd775f">CentOS 6.3にシステムワイドなrbenv+ruby-buildの環境を構築する手順 #Ruby - Qiita</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[sudo時にPATHを引き継ぐ]]></title>
    <link href="http://nomnel.github.io/blog/centos-take-over-path-from-user-on-sudo/"/>
    <updated>2013-05-04T11:50:00+09:00</updated>
    <id>http://nomnel.github.io/blog/centos-take-over-path-from-user-on-sudo</id>
    <content type="html"><![CDATA[<h3>環境</h3>

<ul>
<li>CentOS release 6.4 (Final)</li>
</ul>


<!-- more -->


<h3>方法</h3>

<p><code>sh
sudo visudo
</code></p>

<p>として以下の行を探し,</p>

<p><code>
Defaults    env_reset
Defaults    env_keep =  "COLORS DISPLAY HOSTNAME HISTSIZE INPUTRC KDEDIR LS_COLORS"
Defaults    env_keep += "MAIL PS1 PS2 QTDIR USERNAME LANG LC_ADDRESS LC_CTYPE"
Defaults    env_keep += "LC_COLLATE LC_IDENTIFICATION LC_MEASUREMENT LC_MESSAGES"
Defaults    env_keep += "LC_MONETARY LC_NAME LC_NUMERIC LC_PAPER LC_TELEPHONE"
Defaults    env_keep += "LC_TIME LC_ALL LANGUAGE LINGUAS _XKB_CHARSET XAUTHORITY"
</code></p>

<p>次の行を追加.</p>

<p><code>
Defaults    env_keep += "PATH"
</code></p>

<p>また, <code>secure_path</code>の行を次のようにコメントアウトする.</p>

<p>```</p>

<h1>Defaults    secure_path = /sbin:/bin:/usr/sbin:/usr/bin</h1>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Jenkins氏をさくらVPSに招聘する]]></title>
    <link href="http://nomnel.github.io/blog/install-jenkins/"/>
    <updated>2013-05-02T17:00:00+09:00</updated>
    <id>http://nomnel.github.io/blog/install-jenkins</id>
    <content type="html"><![CDATA[<h3>目次</h3>

<ol>
<li>環境</li>
<li>Javaのインストール</li>
<li>Jenkinsのインストール</li>
<li>nginx経由でJenkinsにアクセスする</li>
<li>Jenkinsへのアクセス制限</li>
</ol>


<!-- more -->


<h3>環境</h3>

<p>CentOS 6.4 64bit</p>

<h3>Javaのインストール</h3>

<p>(参照: 公式サイトの<a href="https://wiki.jenkins-ci.org/display/JENKINS/Installing+Jenkins">Installing Jenkins</a>)</p>

<p>Jenkins氏は職場環境としてJavaを要求している. しかも <strong>Sun-compatible</strong> なJavaを.</p>

<p>なので, まずはJavaがインストールされているかチェック.</p>

<p><code>sh
java -version
</code></p>

<p>僕の場合はインストールされていなかったが, もし</p>

<p><code>sh
java version "1.5.0"
gij (GNU libgcj) version 4.4.6 20110731 (Red Hat 4.4.6-3)
</code></p>

<p>のように表示された場合は, Jenkins氏好みのJavaではないので</p>

<p><code>sh
sudo yum remove java
</code></p>

<p>してからインストールし直す. インストールされていなかった場合はここから.</p>

<p>```sh
sudo yum search openjdk #バージョンチェック</p>

<p>sudo yum install java-1.7.0-openjdk # インストール
```</p>

<p>確認</p>

<p>```sh
java -version</p>

<h1>出力結果</h1>

<p>java version "1.7.0_19"
OpenJDK Runtime Environment (rhel-2.3.9.1.el6_4-x86_64)
OpenJDK 64-Bit Server VM (build 23.7-b01, mixed mode)
```</p>

<h3>Jenkinsのインストール</h3>

<p>(参照: 公式サイトの<a href="https://wiki.jenkins-ci.org/display/JENKINS/Installing+Jenkins">Installing Jenkins</a>)</p>

<p>```sh</p>

<h1>リポジトリを登録</h1>

<p>sudo wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat/jenkins.repo</p>

<h1>鍵を登録</h1>

<p>sudo rpm --import http://pkg.jenkins-ci.org/redhat-stable/jenkins-ci.org.key</p>

<h1>インストール</h1>

<p>sudo yum install jenkins
```</p>

<p>で, 出勤してもらう. 以後は住み込みで.</p>

<p><code>
sudo service jenkins start # 起動
sudo chkconfig jenkins on  # 自動起動の設定
</code></p>

<p>Jenkins氏はデフォルトで8080番ポートで待機しているので, 素直に8080番を開ける(参考: <a href="http://nomnel.net/blog/iptables-filter/">iptablesでパケットフィルタリングするための設定</a>)か, nginx経由でアクセス出来るように設定する.</p>

<h3>nginx経由でJenkinsにアクセスする</h3>

<p>nginxのインストールは<a href="http://nomnel.net/blog/install-nginx-in-centos6-using-yum/">こちら</a>を参照.</p>

<h4>http://jenkins.yourdomain.comでアクセスしたい場合</h4>

<p><code>/etc/nginx/conf.d/jenkins.conf</code>に</p>

<p>```
server {</p>

<pre><code>listen 80;
server_name jenkins.yourdomain.com;
location / {
    proxy_pass http://localhost:8080;
}
</code></pre>

<p>}
```</p>

<p>と記述し,</p>

<p><code>sh
sudo service nginx restart
</code></p>

<p>でnginxを再起動して反映.</p>

<h4>http://yourdomain.com/jenkinsでアクセスしたい場合</h4>

<p>```
server {</p>

<pre><code>listen 80;
server_name yourdomain.com;
location /jenkins {
    proxy_pass http://localhost:8080;
}
</code></pre>

<p>}
```</p>

<p>とし, <code>/etc/sysconfig/jenkins</code>を以下のように修正する(prefixを認識させておく)</p>

<p>```</p>

<h1>修正前</h1>

<p>JENKINS_ARGS=""</p>

<h1>修正後</h1>

<p>JENKINS_ARGS="--prefix=/jenkins --httpPort=${JENKINS_PORT} --ajp13Port=${JENKINS_AJP_PORT}"
```</p>

<p>終わったら</p>

<p><code>sh
sudo service nginx restart
sudo service jenkins restart
</code></p>

<p>でnginxとJenkinsを再起動して反映.</p>

<h3>Jenkinsへのアクセス制限</h3>

<p>このままだと誰でも何でも出来てしまうので, <a href="https://wiki.jenkins-ci.org/display/JA/Standard+Security+Setup">Standard Security Setup - 日本語 - Jenkins Wiki</a>を参照してアクセス制限をかけておく.</p>

<ol>
<li>トップからManage Jenkins > Configure Global Securityと進んで,</li>
<li>Enable securityにチェック</li>
<li>Security Realm > Jenkins's own user database > Allow users to sign upにチェック</li>
<li>Authorization > Matrix-based securityにチェックを入れて</li>
<li>User/group to add: に管理者ユーザ名を入力してAddをクリック</li>
<li>追加した管理者ユーザは全てチェックを入れて, Anonymousのチェックを全て外す</li>
<li>Saveをクリック</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CentOS6で最新版のnginxをyumでインストールする]]></title>
    <link href="http://nomnel.github.io/blog/install-nginx-in-centos6-using-yum/"/>
    <updated>2013-05-02T12:20:00+09:00</updated>
    <id>http://nomnel.github.io/blog/install-nginx-in-centos6-using-yum</id>
    <content type="html"><![CDATA[<p><a href="http://nomnel.net/blog/install-nginx-in-debian-using-apt-get/">Debianのとき</a>と同様, 標準のままではパッケージシステムで最新版をインストールすることが出来ないのでその対策.</p>

<!-- more -->


<p>リポジトリを登録する. (URLは<a href="http://nginx.org/en/linux_packages.html#stable">公式のページ</a>を参照)</p>

<p><code>sh
sudo rpm -ivh http://nginx.org/packages/centos/6/noarch/RPMS/nginx-release-centos-6-0.el6.ngx.noarch.rpm
</code></p>

<p>すると<code>/etc/yum.repos.d/nginx.repo</code>が以下のようになる.</p>

<p>```sh</p>

<h1>nginx.repo</h1>

<p>[nginx]
name=nginx repo
baseurl=http://nginx.org/packages/centos/6/$basearch/
gpgcheck=0
enabled=1
```</p>

<p>後は普通にyumでインストールすると最新版が入る.</p>

<p><code>sh
sudo yum install -y nginx
</code></p>

<p>起動する(Apache等が動いていたら先に止めておく)</p>

<p><code>sh
sudo service nginx start
</code></p>

<p>ブラウザでアクセスして<code>Welcome to nginx!</code>と表示されたら成功.</p>

<p>ちなみにドキュメントルートは<code>/usr/share/nginx/html/</code>.</p>

<h3>参考</h3>

<p><a href="http://heartbeats.jp/hbblog/2012/02/nginx02.html">nginx連載2回目: nginxのインストール</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[WordPressのアンインストール]]></title>
    <link href="http://nomnel.github.io/blog/uninstall-wordpress/"/>
    <updated>2013-05-02T11:45:00+09:00</updated>
    <id>http://nomnel.github.io/blog/uninstall-wordpress</id>
    <content type="html"><![CDATA[<p><a href="http://nomnel.net/blog/install-wordpress/">blogとしてインストールしていた場合</a></p>

<p>```sh
sudo rm -rf /var/www/html/blog</p>

<h1>mysqlにログイン</h1>

<p>mysql -u root -p</p>

<h1>データベースを削除</h1>

<p>mysql> drop databases wordpress;
```</p>
]]></content>
  </entry>
  
</feed>
