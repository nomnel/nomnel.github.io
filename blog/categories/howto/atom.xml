<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: howto | 飲んだり寝たり]]></title>
  <link href="http://nomnel.net/blog/categories/howto/atom.xml" rel="self"/>
  <link href="http://nomnel.net/"/>
  <updated>2013-10-21T21:20:24+09:00</updated>
  <id>http://nomnel.net/</id>
  <author>
    <name><![CDATA[nomnel]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[SinatraでHello Worldするまで]]></title>
    <link href="http://nomnel.net/blog/sinatra-hello-world/"/>
    <updated>2013-10-21T21:30:00+09:00</updated>
    <id>http://nomnel.net/blog/sinatra-hello-world</id>
    <content type="html"><![CDATA[<p>Gemfile作ってbundle installする.</p>

<p>```ruby
source 'https://rubygems.org'</p>

<p>gem 'sinatra'
```</p>

<p>本体書く. app.rbに書くとする.</p>

<p>```ruby
require 'sinatra'</p>

<p>get '/' do
  'Hello World!'
end
```</p>

<p>config.ru書く.</p>

<p><code>ruby
require './app'
run Sinatra::Application
</code></p>

<p>起動する.</p>

<p><code>
bundle exec rackup
</code></p>

<p>で, <code>http://localhost:9292</code>にブラウザでアクセス.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GaucheのHEADをインストールする]]></title>
    <link href="http://nomnel.net/blog/gauche-head/"/>
    <updated>2013-08-14T02:45:00+09:00</updated>
    <id>http://nomnel.net/blog/gauche-head</id>
    <content type="html"><![CDATA[<p>math.primeとかdotimesで回数だけ指定出来るようになってたりとかあるので開発版のGaucheを使いたい.<!-- more --></p>

<p>まず, 最新版のGaucheが必要なのでインストール.</p>

<p><code>sh
brew install gauche
</code></p>

<p>で開発版をgithubから持ってくる.</p>

<p><code>sh
git clone git@github.com:shirok/Gauche.git
</code></p>

<p>インストール方法は<code>HACKING</code>というファイルを参照する. 今回は</p>

<p><code>sh
./DIST gen
</code></p>

<p>してから, いつもどおり</p>

<p><code>sh
./configure
make
make install
</code></p>

<p>すればよかった.</p>

<p>```sh
gosh -V</p>

<h1>-> Gauche scheme shell, version 0.9.4_pre3 [utf-8,pthreads], x86_64-apple-darwin12.4.0</h1>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Vagrantで作ったVMからbase boxを作る]]></title>
    <link href="http://nomnel.net/blog/create-vagrant-base-box/"/>
    <updated>2013-08-10T14:00:00+09:00</updated>
    <id>http://nomnel.net/blog/create-vagrant-base-box</id>
    <content type="html"><![CDATA[<p><a href="http://www.vagrantbox.es/">DLしてきたbase box</a>からちょっとだけいじったものを自分用のbase boxとして持っておきたいとき.<!-- more --></p>

<p>```sh</p>

<h1>VM_NAMEはVirtual Boxで表示されているもの(General->Name)</h1>

<p>vagrant package  --base VM_NAME
```</p>

<p>とすると, カレントディレクトリに<code>package.box</code>というファイルが出来る. これがbase boxなので, あとはvagrantに登録すれば普通にVMを作成できる.</p>

<p><code>sh
vagrant box add mybox package.box
mkdir test
cd test
vagrant init mybox
vagrant up
vagrant ssh
</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Railsで多対多の関係を表現する]]></title>
    <link href="http://nomnel.net/blog/rails-many-to-many-relationship/"/>
    <updated>2013-07-14T17:00:00+09:00</updated>
    <id>http://nomnel.net/blog/rails-many-to-many-relationship</id>
    <content type="html"><![CDATA[<p>例えばUserモデルとCompanyモデルが多対多(お互いhas_many)の関係であることを表現するときは, 中間のモデルCompanyUser(アルファベット順にならべる)を使う.</p>

<p>それぞれコードは以下のようになる.</p>

<p>```ruby</p>

<h1>app/models/user.rb</h1>

<p>class User &lt; ActiveRecord::Base
  has_many :company_users
  has_many :companies, through: :company_users
end
```</p>

<p>```ruby</p>

<h1>app/models/company.rb</h1>

<p>class Company &lt; ActiveRecord::Base
  has_many :company_users
  has_many :users, through: :company_users
end
```</p>

<p>```ruby</p>

<h1>app/models/company_user.rb</h1>

<p>class CompanyUser &lt; ActiveRecord::Base
  belongs_to :company
  belongs_to :user
end
```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RailsでSQLiteを操作する]]></title>
    <link href="http://nomnel.net/blog/rails-db-command/"/>
    <updated>2013-07-13T20:00:00+09:00</updated>
    <id>http://nomnel.net/blog/rails-db-command</id>
    <content type="html"><![CDATA[<p>MySQLだと<code>mysql -u root -p DATABASE_NAME</code>とかすれば直接操作出来るんだけどSQLiteだとどうすんのかなー, って思ってたら</p>

<p><code>sh
rails db
</code></p>

<p>でいいっぽい. もちろんMySQLをDBに指定していたら上のコマンドでMySQLが起動される.</p>

<p>ちなみに</p>

<p>```sh
終了
.exit or .quit</p>

<p>テーブル一覧
.tables</p>

<p>その他コマンド
.help
```</p>
]]></content>
  </entry>
  
</feed>
