<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: rails | 飲んだり寝たり]]></title>
  <link href="http://nomnel.net/blog/categories/rails/atom.xml" rel="self"/>
  <link href="http://nomnel.net/"/>
  <updated>2014-01-27T16:53:03+09:00</updated>
  <id>http://nomnel.net/</id>
  <author>
    <name><![CDATA[nomnel]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[ActiveRecordでgroup byしてそのcount順にorder byする]]></title>
    <link href="http://nomnel.net/blog/activerecord-group-count-order/"/>
    <updated>2014-01-27T17:00:00+09:00</updated>
    <id>http://nomnel.net/blog/activerecord-group-count-order</id>
    <content type="html"><![CDATA[<p>タイトル分かりにくいけどこういうこと.</p>

<p><code>ruby
Foo.group(:bar).order(:bar).count(:bar)
</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Railsで複数テーブルに跨ってincludesする]]></title>
    <link href="http://nomnel.net/blog/rails-multi-table-includes/"/>
    <updated>2013-07-20T23:00:00+09:00</updated>
    <id>http://nomnel.net/blog/rails-multi-table-includes</id>
    <content type="html"><![CDATA[<p>例えば<code>A has_many Bs</code>かつ<code>B has_one C</code>であるとき</p>

<p><code>ruby
A.all.includes(bs: :c)
</code></p>

<p>とすればよい. さらに<code>B has_many Ds</code>であれば</p>

<p><code>ruby
A.all.includes(bs: [:c, :ds])
</code></p>

<p>となる.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Paperclipのsytlesやconvert_optionsの変更を既存のデータにも適用する]]></title>
    <link href="http://nomnel.net/blog/paperclip-refresh-missing-styles/"/>
    <updated>2013-07-18T11:35:00+09:00</updated>
    <id>http://nomnel.net/blog/paperclip-refresh-missing-styles</id>
    <content type="html"><![CDATA[<p>例えば<a href="http://nomnel.net/blog/fjord-day35/">後付で投稿画像を640px x 640pxに統一するようにした</a>ときなど. 既存のデータにもその変更を反映したいときは</p>

<p><code>sh
rake paperclip:refresh:missing_styles
</code></p>

<p>とすればPaperclipで管理している全てのデータ(original以外)を現在のルールで再生成してくれる. ただこれだと変更に関係ないクラスも(ex: BookCoverだけ変更したのにUserImageも)再生成されるので非効率. なので</p>

<p>```ruby
BookCover.all.each do |cover|
  cover.image.reprocess!(*nil)
  if cover.errors.present?</p>

<pre><code># エラー処理
</code></pre>

<p>  end
```</p>

<p>のようにすれば特定のクラスのデータだけ再生成できる.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Railsで多対多の関係を表現する]]></title>
    <link href="http://nomnel.net/blog/rails-many-to-many-relationship/"/>
    <updated>2013-07-14T17:00:00+09:00</updated>
    <id>http://nomnel.net/blog/rails-many-to-many-relationship</id>
    <content type="html"><![CDATA[<p>例えばUserモデルとCompanyモデルが多対多(お互いhas_many)の関係であることを表現するときは, 中間のモデルCompanyUser(アルファベット順にならべる)を使う.</p>

<p>それぞれコードは以下のようになる.</p>

<p>```ruby</p>

<h1>app/models/user.rb</h1>

<p>class User &lt; ActiveRecord::Base
  has_many :company_users
  has_many :companies, through: :company_users
end
```</p>

<p>```ruby</p>

<h1>app/models/company.rb</h1>

<p>class Company &lt; ActiveRecord::Base
  has_many :company_users
  has_many :users, through: :company_users
end
```</p>

<p>```ruby</p>

<h1>app/models/company_user.rb</h1>

<p>class CompanyUser &lt; ActiveRecord::Base
  belongs_to :company
  belongs_to :user
end
```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails4でObserverを使う]]></title>
    <link href="http://nomnel.net/blog/rails4-observer/"/>
    <updated>2013-07-14T16:45:00+09:00</updated>
    <id>http://nomnel.net/blog/rails4-observer</id>
    <content type="html"><![CDATA[<p>Rails4ではobserversが削除されているので, 使用したい場合は<code>rails-observers</code>gemをインストールする.</p>

<p><code>ruby
gem 'rails-observers'
</code></p>

<p>もしくはActiveRecordのcallbackで</p>

<p>```ruby
class Hoge &lt; ActiveRecord::Base
  before_save do</p>

<pre><code># 何か処理
</code></pre>

<p>  end
end
```</p>

<p>や</p>

<p>```ruby
class Hoge &lt; ActiveRecord::Base
  before_save :some_action</p>

<p>  def some_action</p>

<pre><code># 何か処理
</code></pre>

<p>  end
end
```</p>

<p>のようにしてもよい.</p>
]]></content>
  </entry>
  
</feed>
