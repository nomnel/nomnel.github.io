<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: tips | 飲んだり寝たり]]></title>
  <link href="http://nomnel.net/blog/categories/tips/atom.xml" rel="self"/>
  <link href="http://nomnel.net/"/>
  <updated>2013-06-06T00:44:30+09:00</updated>
  <id>http://nomnel.net/</id>
  <author>
    <name><![CDATA[nomnel]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Railsでbefore_destroyを使うときの注意点]]></title>
    <link href="http://nomnel.net/blog/rails-before-destroy-with-relation-model/"/>
    <updated>2013-06-06T00:30:00+09:00</updated>
    <id>http://nomnel.net/blog/rails-before-destroy-with-relation-model</id>
    <content type="html"><![CDATA[<p>```ruby
class Foo &lt; ActiveRecord::Base
  has_many :bars, dependent: :destroy
  before_destroy :do_something</p>

<p>  def do_something</p>

<pre><code>return if bars.blank?
bars.map &amp;:somethig_cool
</code></pre>

<p>  end
end
```</p>

<p>このように, <code>has_many</code>(<code>has_one</code>)な関係をものを<code>before_destroy</code>で使うには注意が必要. 上の例だと<code>before_destroy</code>の前にbarsは削除されてしまうので, <code>bars.blank?</code>は必ず真になり<code>bars.map &amp;:somethig_cool</code>は永久に実行されない.</p>

<p>これを避けるには以下のようにする.</p>

<p>```ruby
class Foo &lt; ActiveRecord::Base
  before_destroy :do_something
  has_many :bars, dependent: :destroy</p>

<h1>以下略</h1>

<p>```</p>

<p><code>before_destroy</code>と<code>has_many</code>の順番を逆にしただけだが, これで期待通りの挙動(<code>before_destroy</code>の後にbarsを削除)になる.</p>

<p>なのでこのようなときはObserverは使えない.</p>

<p>```ruby
class FooObserver &lt; ActiveRecord::Observer
  def before_destroy foo</p>

<pre><code>return if foo.bars.blank?
foo.bars.map &amp;:somethig_cool
</code></pre>

<p>  end
end
```</p>

<p>の<code>before_destroy</code>はbarsが削除されてから実行される.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rubyでサブクラスの取得]]></title>
    <link href="http://nomnel.net/blog/ruby-get-subclasses/"/>
    <updated>2013-06-05T16:00:00+09:00</updated>
    <id>http://nomnel.net/blog/ruby-get-subclasses</id>
    <content type="html"><![CDATA[<p>直接の子クラスのみなら</p>

<p>```ruby
class Class
  def subclasses</p>

<pre><code>ObjectSpace.each_object(Class).select{|klass| klass.superclass == self}
</code></pre>

<p>  end
end
```</p>

<p>子孫クラス(?)全てなら</p>

<p>```ruby
class Class
  def subclasses</p>

<pre><code>ObjectSpace.each_object(Class).select{|klass| klass &lt; self}
</code></pre>

<p>  end
end
```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rubyで配列展開]]></title>
    <link href="http://nomnel.net/blog/ruby-expand-array-as-function-arguments/"/>
    <updated>2013-06-05T01:00:00+09:00</updated>
    <id>http://nomnel.net/blog/ruby-expand-array-as-function-arguments</id>
    <content type="html"><![CDATA[<p>Rubyで引数に与える配列に*をつけると, 配列を展開することができる.</p>

<p>```ruby
def hoge args
  args = [*args]
end</p>

<p>hoge 1      # => [1]
hoge [1, 2] # => [1, 2]
```</p>

<p>便利.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CentOSのバージョンとアーキテクチャの確認]]></title>
    <link href="http://nomnel.net/blog/confirm-centos-version/"/>
    <updated>2013-05-02T11:40:00+09:00</updated>
    <id>http://nomnel.net/blog/confirm-centos-version</id>
    <content type="html"><![CDATA[<p>```sh</p>

<h1>バージョン確認</h1>

<p>cat /etc/redhat-release</p>

<h1>=> CentOS release 6.4 (Final)</h1>

<h1>OSが64bitか32bitか</h1>

<p>arch</p>

<h1>=> x86_64</h1>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Railsでページ遷移前に確認ダイアログを表示する]]></title>
    <link href="http://nomnel.net/blog/rails-confirm-on-leaving-the-page/"/>
    <updated>2013-04-26T18:00:00+09:00</updated>
    <id>http://nomnel.net/blog/rails-confirm-on-leaving-the-page</id>
    <content type="html"><![CDATA[<p>実装のみ簡単に.</p>

<!-- more -->


<p>coffeeはこんな感じ.</p>

<p>```coffeescript
isChanged = false
$('#hoge').change ->
  isChanged = true</p>

<p>orgSubmit = $('input[type=submit]').onClick
$('input[type=submit]').click ->
  isChanged = false
  orgSubmit()</p>

<p>$(window).bind 'beforeunload', ->
  return unless isChanged
  '表示したいメッセージ'
```</p>

<p>specは</p>

<p>```ruby
scenario 'hogeを変更後にsubmit以外のページ遷移しようとしたときに確認ダイアログを表示' do
  find('#hoge').set 'My String'</p>

<p>  visit root_path
  expect(page.driver.confirm_messages[0]).to eq '表示したいメッセージ'
end
```</p>

<p>な感じ.</p>
]]></content>
  </entry>
  
</feed>
