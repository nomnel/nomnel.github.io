<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: diary | 飲んだり寝たり]]></title>
  <link href="http://nomnel.net/blog/categories/diary/atom.xml" rel="self"/>
  <link href="http://nomnel.net/"/>
  <updated>2013-05-10T17:21:27+09:00</updated>
  <id>http://nomnel.net/</id>
  <author>
    <name><![CDATA[nomnel]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[インターン46日目]]></title>
    <link href="http://nomnel.net/blog/fjord-day46/"/>
    <updated>2013-05-10T17:00:00+09:00</updated>
    <id>http://nomnel.net/blog/fjord-day46</id>
    <content type="html"><![CDATA[<p>さて今日は,</p>

<ol>
<li>作業途中に気になった細かいもの3つ</li>
<li>特選の怖い話を管理画面から編集できるようにする (途中)</li>
</ol>


<p>をしていた.</p>

<!-- more -->


<p>細かいものというのは以下.</p>

<ol>
<li><code>rake db:migrate</code>すると<code>db/schema.rb</code>が変更される(not nullの追加)
 -> 変更漏れっぽいので適用</li>
<li>先日"Google Analyticsの結果をLingrに通知"に取り組んだ際, client_idなどをベタ書きしていた
 -> <code>config/settings/production.yml</code>などに移動</li>
<li>管理者用の怖い話一覧画面で(多分)投稿者名を表示するところが<code>#&lt;User:0000000000&gt;</code>みたいになっていた
 -> 投稿者名を表示するように修正</li>
</ol>


<p>特選の怖い話を管理画面から編集できるようにするタスクの方針は</p>

<ol>
<li>特選の怖い話を上述の<code>config/settings/*.yml</code>で管理していたのを怖い話テーブルに移動</li>
<li>既存のcontrollerを修正</li>
<li>管理者用の特選編集画面を追加</li>
<li>特選から除外できるように</li>
<li>特選に追加できるように</li>
</ol>


<p>といったところで今は4に取り組んでいるところ. 除外と追加は一画面で遷移無しに出来るようにしたいなー.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[インターン43日目]]></title>
    <link href="http://nomnel.net/blog/fjord-day43/"/>
    <updated>2013-05-07T17:30:00+09:00</updated>
    <id>http://nomnel.net/blog/fjord-day43</id>
    <content type="html"><![CDATA[<p>さて今日は、</p>

<ol>
<li>怖話投稿時のタグをフォーム10個に分ける</li>
<li>Googleアナリティクスの結果をLingrで知りたい (途中)</li>
</ol>


<p>をしていた.</p>

<!-- more -->


<p>1は実装(と言っても3行だが)のみでデザインは町田さんにお願いした.</p>

<p>2はrunnerのタスクとしてcronで定時に実行する方針. 明日には終わらせたい.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[インターン42日目]]></title>
    <link href="http://nomnel.net/blog/fjord-day42/"/>
    <updated>2013-05-02T17:20:00+09:00</updated>
    <id>http://nomnel.net/blog/fjord-day42</id>
    <content type="html"><![CDATA[<p>さて今日は,</p>

<ol>
<li><a href="http://nomnel.net/blog/install-nginx-in-centos6-using-yum/">CentOS6で最新版のnginxをyumでインストールする</a></li>
<li><a href="http://nomnel.net/blog/install-jenkins/">Jenkins氏をさくらVPSに招聘する</a></li>
</ol>


<p>をした. Jenkinsを入れたのは, せっかくwebサービスを作るなら継続的インテグレーションも経験したいと思ったからだ.</p>

<!-- more -->


<p>http://domain.com/jenkins としてアクセスするためには, Jenkins側でもprefixを指定しなければいけないことに気づかず手間取ったが, nginxでリバースプロキシを使う方法も分かったし良い勉強になった.</p>

<p>とりあえずJenkins氏には, このブログのデプロイを任せてみようと思う.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[インターン41日目]]></title>
    <link href="http://nomnel.net/blog/fjord-day41/"/>
    <updated>2013-05-01T23:30:00+09:00</updated>
    <id>http://nomnel.net/blog/fjord-day41</id>
    <content type="html"><![CDATA[<p>(40日目は省略されました)</p>

<p>さて, 大方のプラクティスを終えたこともあり, 今日から</p>

<ol>
<li><a href="http://256interns.com/practices/75">webアプリ, サービスを作る</a></li>
</ol>


<p>というプラクティスを始めることになった. これがFjordでのインターン総まとめになると思う.</p>

<!-- more -->


<p>そもそもインターンを始めたのはプログラマとして就職するための準備だった(あわよくば紹介してもらうことも含めて). で, 準備というのは</p>

<ul>
<li>プログラマとして必要な知識を得る</li>
<li>いまどきなプルリクベースの開発を経験する</li>
<li>稼働中なサービスの改良を経験する</li>
</ul>


<p>の上で</p>

<ul>
<li>小規模サービスなら1人で構築, 運営できるようになる</li>
</ul>


<p>ことだと考えた. なのでこのプラクティスを完了したときには最初の目標を達成したことになる(サービスの運営は除く).</p>

<p>本音を言うと就活するのは怖いのだが, いつまでもインターンを続けるわけにもいかないし, いい頃合いだとして納得できるものを作って終えたい.</p>

<p>※ 作ったものが残念だったらまた別のを作るので延びるかもしれん</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[インターン39日目]]></title>
    <link href="http://nomnel.net/blog/fjord-day39/"/>
    <updated>2013-04-26T19:00:00+09:00</updated>
    <id>http://nomnel.net/blog/fjord-day39</id>
    <content type="html"><![CDATA[<p>さて今日は,</p>

<ol>
<li>怖い話を執筆中にページを離脱した場合, 警告を出す</li>
</ol>


<p>をした.</p>

<!-- more -->


<p>実装は<a href="http://nomnel.net/blog/rails-confirm-on-leaving-the-page/">こんな感じ</a>ですぐ出来たんだけど, テストを回すと</p>

<p>```
3) なんかテストの説明</p>

<pre><code> Failure/Error: fill_in 'hoge', with: 'foo'
 Capybara::Webkit::InvalidResponseError:
   Unable to load URL: http://127.0.0.1:58549/ because of error loading https://s-static.ak.facebook.com/connect/xd_arbiter.php?version=23#channel=*********&amp;origin=http://127.0.0.1:58549&amp;channel_path=/users/sign_in?fb_xd_fragment#xd_sig=***********: Connection closed
</code></pre>

<p>```</p>

<p>というエラーが全く関係無いところにも出る. さらに全くエラーが出ないときもあったりする. なので追加したテストが正しいのかも確認できない状況だった.</p>

<p>対策を探そうと, ずっと</p>

<p>```
Capybara::Webkit::InvalidResponseError:</p>

<pre><code>   Unable to load URL:
</code></pre>

<p>```</p>

<p>の部分でググっていたが解決法は見つからなかった. が, 問題は</p>

<p><code>
because of error loading https://s-static.ak.facebook.com/connect/xd_arbiter.php?version=23#channel=*********&amp;origin=http://127.0.0.1:58549&amp;channel_path=/users/sign_in?fb_xd_fragment#xd_sig=***********: Connection closed
</code></p>

<p>の方で, どうやらFacebookとの接続がうまくいっていなかったのではと思われる. 先に述べた「全くエラーが出ないときもあったりする」という現象から考えて, テスト回し過ぎ -> Facebookにアクセスしすぎ -> 拒否られる, という図式なんじゃないかと.</p>

<p>実際, 15分ほど間隔を開けてからテストを回すと上のエラーは出なかった. (多分, 昨日手こずっていたエラーも同じ現象だったのだろう. )</p>

<p>ただ, 実際にテストを何度も回したいときに15分待つのは辛いので, Facebookからなんか引っ張ってきている部分をコメントアウトすればよい.</p>

<p>あー, 時間無駄にした.</p>
]]></content>
  </entry>
  
</feed>
